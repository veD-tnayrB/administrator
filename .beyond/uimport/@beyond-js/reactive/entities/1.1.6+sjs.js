{"code":"System.register([\"@beyond-js/kernel@0.1.9/bundle\",\"@beyond-js/reactive@1.1.6/settings\",\"@beyond-js/events@0.0.6/events\",\"@beyond-js/reactive@1.1.6/model\",\"dexie@3.2.4\",\"@beyond-js/kernel@0.1.9/core\",\"@beyond-js/reactive@1.1.6/database\",\"uuid@9.0.1\"], (_exports, _context) => {\n\nconst bimport = specifier => {\n\tconst dependencies = new Map([[\"@beyond-js/kernel\",\"0.1.9\"],[\"@beyond-js/reactive\",\"1.1.6\"],[\"@beyond-js/events\",\"0.0.6\"],[\"dexie\",\"3.2.4\"],[\"uuid\",\"9.0.1\"]]);\n\treturn globalThis.bimport(globalThis.bimport.resolve(specifier, dependencies));\n};\n\n\nvar dependencies = new Map();\nvar require = dependency => dependencies.get(dependency);\nreturn {\nsetters: [dep => dependencies.set('@beyond-js/kernel@0.1.9/bundle', dep), dep => dependencies.set('@beyond-js/reactive@1.1.6/settings', dep), dep => dependencies.set('@beyond-js/events@0.0.6/events', dep), dep => dependencies.set('@beyond-js/reactive@1.1.6/model', dep), dep => dependencies.set('dexie@3.2.4', dep), dep => dependencies.set('@beyond-js/kernel@0.1.9/core', dep), dep => dependencies.set('@beyond-js/reactive@1.1.6/database', dep), dep => dependencies.set('uuid@9.0.1', dep)],\nexecute: function() {\n// Prevent esbuild from considering the context to be amd\nconst define = void 0;\nconst module = {};\n\nconst code = (module, require) => {\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// .beyond/uimport/@beyond-js/reactive/entities.1.1.6.js\nvar entities_1_1_6_exports = {};\n__export(entities_1_1_6_exports, {\n  Book: () => Book,\n  Books: () => Books,\n  Collection: () => Collection,\n  CollectionLocalProvider: () => CollectionLocalProvider,\n  CollectionProvider: () => CollectionProvider,\n  IConfig: () => IConfig,\n  IItem: () => IItem,\n  IResponseAdapter: () => IResponseAdapter,\n  Item: () => Item,\n  ItemProvider: () => ItemProvider,\n  LocalProvider: () => LocalProvider,\n  RegistryFactory: () => RegistryFactory,\n  StoreRecords: () => StoreRecords,\n  TCustomAdapter: () => TCustomAdapter,\n  __beyond_pkg: () => __beyond_pkg,\n  hmr: () => hmr\n});\nmodule.exports = __toCommonJS(entities_1_1_6_exports);\n\n// node_modules/@beyond-js/reactive/entities/entities.browser.mjs\nvar dependency_0 = __toESM(require(\"@beyond-js/kernel@0.1.9/bundle\"), 0);\nvar dependency_1 = __toESM(require(\"@beyond-js/reactive@1.1.6/settings\"), 0);\nvar dependency_2 = __toESM(require(\"@beyond-js/reactive@1.1.6/model\"), 0);\nvar dependency_3 = __toESM(require(\"@beyond-js/reactive@1.1.6/database\"), 0);\nvar dependency_4 = __toESM(require(\"dexie@3.2.4\"), 0);\nvar dependency_5 = __toESM(require(\"@beyond-js/kernel@0.1.9/core\"), 0);\nvar dependency_6 = __toESM(require(\"uuid@9.0.1\"), 0);\nvar import_meta = {};\nvar {\n  Bundle: __Bundle\n} = dependency_0;\nvar __pkg = new __Bundle({\n  \"module\": {\n    \"vspecifier\": \"@beyond-js/reactive@1.1.6/entities\"\n  },\n  \"type\": \"ts\"\n}, _context.meta.url).package();\n;\n__pkg.dependencies.update([[\"@beyond-js/reactive/settings\", dependency_1], [\"@beyond-js/reactive/model\", dependency_2], [\"@beyond-js/reactive/database\", dependency_3], [\"dexie\", dependency_4], [\"@beyond-js/kernel/core\", dependency_5], [\"uuid\", dependency_6]]);\nvar ims = /* @__PURE__ */new Map();\nims.set(\"./adapter/default\", {\n  hash: 351600073,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.DefaultAdapter = void 0;\n    class DefaultAdapter {\n      toClient(data) {\n        return Promise.resolve(data);\n      }\n      fromRemote(data) {\n        return Promise.resolve(data);\n      }\n      fromRemoteList(data) {\n        return Promise.resolve(data);\n      }\n    }\n    exports.DefaultAdapter = DefaultAdapter;\n  }\n});\nims.set(\"./adapter/index\", {\n  hash: 1352406609,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.ResponseAdapter = void 0;\n    var _settings = require2(\"@beyond-js/reactive/settings\");\n    var _default = require2(\"./default\");\n    var _legacy = require2(\"./legacy\");\n    class ResponseAdapter {\n      static get(parent, adapters) {\n        adapters = adapters ? adapters : _settings.ReactiveConfig.adapter;\n        const Adapter = adapters === \"default\" ? _default.DefaultAdapter : _legacy.LegacyAdapter;\n        return new Adapter(parent);\n      }\n    }\n    exports.ResponseAdapter = ResponseAdapter;\n  }\n});\nims.set(\"./adapter/interface\", {\n  hash: 2454168762,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n  }\n});\nims.set(\"./adapter/legacy\", {\n  hash: 2991999099,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.LegacyAdapter = void 0;\n    class LegacyAdapter {\n      #parent;\n      constructor(parent) {\n        this.#parent = parent;\n      }\n      toClient({\n        error,\n        data\n      } = {}) {\n        if (error) {\n          return {\n            status: false,\n            error: {\n              message: error\n            }\n          };\n        }\n        return {\n          status: true,\n          data\n        };\n      }\n      fromRemote(response) {\n        const {\n          status,\n          data,\n          error\n        } = response;\n        if (!status) throw error ?? \"ERROR_DATA_QUERY\";\n        return data;\n      }\n      fromRemoteList(data) {\n        return Promise.resolve(data);\n      }\n    }\n    exports.LegacyAdapter = LegacyAdapter;\n  }\n});\nims.set(\"./cache/index\", {\n  hash: 4043341357,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.CacheManager = void 0;\n    var _model = require2(\"@beyond-js/reactive/model\");\n    class CacheManager extends _model.ReactiveModel {}\n    exports.CacheManager = CacheManager;\n  }\n});\nims.set(\"./collection/index\", {\n  hash: 3043452401,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.Collection = void 0;\n    var _model = require2(\"@beyond-js/reactive/model\");\n    var _localProvider = require2(\"./local-provider\");\n    var _publish = require2(\"./publish\");\n    var _load = require2(\"./load\");\n    var _adapter = require2(\"../adapter\");\n    class Collection2 extends _model.ReactiveModel {\n      #items = [];\n      localdb = true;\n      get items() {\n        return this.#items;\n      }\n      get isOnline() {\n        return !this.localProvider ? true : this.localProvider.isOnline;\n      }\n      set items(value) {\n        if (!Array.isArray(value)) {\n          return;\n        }\n        this.#items = value;\n        this.triggerEvent();\n      }\n      counters = {};\n      total = 0;\n      next;\n      #localProvider;\n      get localProvider() {\n        return this.#localProvider;\n      }\n      #saveManager;\n      #loadManager;\n      #provider;\n      get provider() {\n        return this.#provider;\n      }\n      sortBy = \"id\";\n      sortDirection = \"asc\";\n      #responseAdapter;\n      get responseAdapter() {\n        return this.#responseAdapter;\n      }\n      #initialSpecs;\n      constructor(specs) {\n        super();\n        const {\n          provider,\n          storeName,\n          db,\n          localdb,\n          item\n        } = specs;\n        this.#initialSpecs = specs;\n        if (storeName) this.storeName = storeName;\n        if (db) this.db = db;\n        if (localdb) this.localdb = localdb;\n        if (item) this.item = item;\n        if (provider) {\n          if (typeof provider !== \"function\") {\n            throw new Error(\"Provider must be a class object\");\n          }\n          this.#provider = new provider();\n        }\n        this.reactiveProps([\"next\"]);\n        this.init();\n      }\n      init() {\n        const getProperty = property => {\n          return this[property];\n        };\n        const setProperty = (property, value) => this[property] = value;\n        const bridge = {\n          get: getProperty,\n          set: setProperty\n        };\n        this.#responseAdapter = _adapter.ResponseAdapter.get(this, this.#initialSpecs?.adapter);\n        this.#localProvider = new _localProvider.CollectionLocalProvider(this, bridge);\n        this.#saveManager = new _publish.CollectionSaveManager(this, bridge);\n        this.#loadManager = new _load.CollectionLoadManager(this, bridge);\n        this.#localProvider.on(\"items.changed\", this.#listenItems);\n        this.localProvider.init();\n      }\n      #listenItems = () => {\n        if (!this.localdb) return;\n        this.#items = this.#loadManager.processEntries(this.#localProvider.items);\n        this.trigger(\"change\");\n      };\n      setOffline = value => this.localProvider.setOffline(value);\n      setItems(values) {\n        this.#items = values;\n      }\n      async store() {\n        await this.#localProvider.init();\n        return this.#localProvider.store;\n      }\n      async delete(ids) {\n        try {\n          if (this.#localProvider) await this.#localProvider.softDelete(ids);\n          if (this.provider) {\n            await this.provider.deleteItems(ids);\n          }\n        } catch (e) {\n          console.error(e);\n        }\n      }\n      load(args) {\n        return this.#loadManager.load(args);\n      }\n      filter = args => this.#loadManager.filter(args);\n      save = args => this.#saveManager.save(args);\n      sync = args => this.#saveManager.sync(args);\n      publish = args => this.#saveManager.publish(args);\n      toSync = () => this.#saveManager.toSync();\n    }\n    exports.Collection = Collection2;\n  }\n});\nims.set(\"./collection/interfaces/ICollection\", {\n  hash: 2369399544,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n  }\n});\nims.set(\"./collection/load\", {\n  hash: 3989365512,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.CollectionLoadManager = void 0;\n    var _factory = require2(\"../registry/factory\");\n    class CollectionLoadManager {\n      filter;\n      #localProvider;\n      #provider;\n      #parentBridge;\n      #parent;\n      #registry;\n      #adapter;\n      get parent() {\n        return this.#parent;\n      }\n      remoteData = [];\n      constructor(parent, parentBridge) {\n        this.#parent = parent;\n        this.#parentBridge = parentBridge;\n        this.#adapter = this.#parent.responseAdapter;\n        this.init();\n      }\n      init() {\n        this.#localProvider = this.#parentBridge.get(\"localProvider\");\n        this.#provider = this.#parentBridge.get(\"provider\");\n        this.#registry = _factory.RegistryFactory.get(this.#parentBridge.get(\"storeName\"));\n        if (this.#localProvider) this.#parent.customFilter = this.#localProvider?.customFilter;\n      }\n      #localLoad = async params => {\n        if (!this.#localProvider) return;\n        const localData = (await this.#localProvider.load(params)) ?? {\n          data: []\n        };\n        const newItems = this.processEntries(localData.data);\n        let items = params.update === true ? this.parent.items.concat(newItems) : newItems;\n        const properties = {\n          localLoaded: true,\n          fetching: false,\n          total: localData.total ?? 0,\n          next: !!localData.next,\n          items\n        };\n        if (localData.next) properties.next = localData.next;\n        this.#parent.loaded = true;\n        this.parent.set(properties);\n        return this.#adapter.toClient({\n          data: items\n        });\n      };\n      #page = 1;\n      #remoteElements = [];\n      #localSave = async (params = {}) => {};\n      load = async (params = {}) => {\n        try {\n          this.parent.fetching = true;\n          const {\n            next\n          } = this.parent;\n          let {\n            start = 0,\n            update\n          } = params;\n          params.limit = params.limit ?? 30;\n          start = update === true && next ? next : start;\n          if (update) {\n            this.#page++;\n            params.start = start;\n          }\n          await this.#localLoad(params);\n          const response = await this.#provider.list(params);\n          const data = this.#adapter.fromRemote(response);\n          const items = await this.processRemoteEntries(data);\n          this.remoteData = response;\n          this.#remoteElements = params.update === true ? this.#remoteElements.concat(items) : items;\n          const properties = {\n            items: this.#remoteElements,\n            next: data.next,\n            loaded: true,\n            fetching: false,\n            total: data.total ?? 0\n          };\n          this.parent.set(properties);\n          this.parent.triggerEvent();\n          return this.#adapter.toClient({\n            data: items\n          });\n        } catch (exc) {\n          this.parent.triggerEvent();\n          console.error(exc);\n          return this.#adapter.toClient({\n            error: exc\n          });\n        } finally {\n          this.#parent.fetching = false;\n          this.#parent.fetched = true;\n          this.#parent.landed = true;\n        }\n      };\n      async processRemoteEntries(data) {\n        if (!data.entries && !data.items) {\n          throw new Error(\"The list method must return an object with an entries property\");\n        }\n        const elements = data.items ? data.items : data.entries;\n        if (data.deletedEntries) {\n          this.#localProvider.softDelete(data.deletedEntries);\n        }\n        await this.#localProvider.save(elements);\n        const promises = [];\n        const items = elements.map(record => {\n          const item = new this.parent.item({\n            id: record.id,\n            properties: record\n          });\n          promises.push(item.isReady);\n          return item;\n        });\n        await Promise.all(promises);\n        items.forEach((item, index) => item.set(elements[index], true));\n        return items;\n      }\n      processEntries = entries => {\n        this.#registry.registerList(this.#parentBridge.get(\"storeName\"), entries);\n        return entries.map(record => {\n          const item = new this.parent.item({\n            id: record.id\n          });\n          item.set(record);\n          return item;\n        });\n      };\n      remoteLoad = async params => {\n        const response = await this.#provider.load(params);\n        if (!response.status) throw \"ERROR_DATA_QUERY\";\n        return response.data;\n      };\n    }\n    exports.CollectionLoadManager = CollectionLoadManager;\n  }\n});\nims.set(\"./collection/local-provider\", {\n  hash: 2033630345,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.CollectionLocalProvider = void 0;\n    var _model = require2(\"@beyond-js/reactive/model\");\n    var _dexie = require2(\"dexie\");\n    var _core = require2(\"@beyond-js/kernel/core\");\n    var _database = require2(\"@beyond-js/reactive/database\");\n    var _factory = require2(\"../registry/factory\");\n    var _registry = require2(\"../registry\");\n    class CollectionLocalProvider2 extends _model.ReactiveModel {\n      #isOnline = globalThis.navigator.onLine;\n      #store;\n      #batches = 200;\n      get store() {\n        return this.#store;\n      }\n      #active;\n      get active() {\n        return this.#active;\n      }\n      #offline;\n      #database;\n      #storeName;\n      #databaseName;\n      #listItems = /* @__PURE__ */new Map();\n      #items = [];\n      #registryFactory;\n      get items() {\n        return this.#items;\n      }\n      #exists = false;\n      #found = false;\n      #ids = /* @__PURE__ */new Set();\n      #db;\n      get isOnline() {\n        return this.#isOnline && !this.#offline && !localStorage.getItem(\"reactive.offline\");\n      }\n      #parent;\n      #bridge;\n      #localdb;\n      #apply;\n      constructor(parent, bridge) {\n        super();\n        const {\n          db,\n          storeName\n        } = parent;\n        this.#parent = parent;\n        this.#bridge = bridge;\n        this.localdb = this.#parent.localdb;\n        if (!this.localdb) {\n          this.#apply = false;\n          return;\n        }\n        if (db) {\n          this.#registryFactory = _factory.RegistryFactory.get(db);\n        }\n        this.#databaseName = db;\n        this.#storeName = storeName;\n        globalThis.addEventListener(\"online\", this.handleConnection);\n        globalThis.addEventListener(\"offline\", this.handleConnection);\n      }\n      setOffline(value) {\n        this.#offline = value;\n        this.triggerEvent();\n      }\n      #promiseInit;\n      init = async () => {\n        try {\n          if (!this.#apply) {\n            this.ready = true;\n            return;\n          }\n          if (this.#promiseInit) return this.#promiseInit;\n          this.#promiseInit = new _core.PendingPromise();\n          if (!this.#databaseName || !this.#storeName) {\n            this.#active = false;\n            this.#promiseInit.resolve();\n            return;\n          }\n          const database = await _database.DBManager.get(this.#databaseName);\n          this.#database = database;\n          this.#store = database.db[this.#storeName];\n          if (!this.#store) {\n            throw new Error(`The store ${this.#storeName} does not exists in the database ${this.#databaseName}`);\n          }\n          this.ready = true;\n          this.#promiseInit.resolve();\n        } catch (e) {\n          console.error(e);\n        }\n      };\n      handleConnection = () => {\n        this.triggerEvent();\n      };\n      #isUnpublished(data) {}\n      #promiseLoad;\n      #params;\n      #total;\n      #page = 0;\n      #customWhere;\n      #defaultWhere = store => store.orderBy(\"id\");\n      #currentLimit;\n      #currentOffset;\n      where = limit => {\n        return () => {\n          let store = this.#store;\n          const offset = (this.#page - 1) * limit;\n          const filter = this.#customWhere ?? this.#defaultWhere;\n          this.#currentLimit = limit;\n          this.#currentOffset = offset;\n          return filter(store).filter(i => i.isDeleted !== 1).offset(offset).limit(limit).toArray();\n        };\n      };\n      customFilter = callback => {\n        this.#customWhere = callback;\n        return this.#parent;\n      };\n      async load(params) {\n        if (!this.#apply) return;\n        if (this.#promiseLoad) return this.#promiseLoad;\n        if (JSON.stringify(this.#params) === JSON.stringify(params)) {\n          return this.#promiseLoad;\n        }\n        this.#promiseLoad = new _core.PendingPromise();\n        await this.init();\n        const conditions = Object.keys(params);\n        const controls = [\"and\", \"or\"];\n        conditions.forEach(condition => {\n          if (controls.includes(condition)) {\n            this.#processControl(condition, params[condition]);\n          }\n        });\n        try {\n          if (!this.#total) this.#total = await this.#store.count();\n          let limit = params.limit ?? 30;\n          const totalPages = Math.ceil(this.#total / limit);\n          if (totalPages <= this.#page) return;\n          let first = true;\n          const live = (0, _dexie.liveQuery)(this.where(limit));\n          this.#page++;\n          let currentPage;\n          live.subscribe({\n            next: async items => {\n              let sameQuery;\n              if (currentPage == this.#page) {\n                sameQuery = true;\n              } else {\n                currentPage = this.#page;\n              }\n              if (this.#promiseLoad) {\n                first = false;\n                const response = {\n                  status: true,\n                  data: items,\n                  total: this.#total,\n                  next: true\n                };\n                if (this.#page + 1 >= totalPages) delete response.next;\n                this.#promiseLoad.resolve(response);\n                this.#promiseLoad = null;\n              }\n              const currentMap = /* @__PURE__ */new Set();\n              items.forEach(item => {\n                this.#listItems.set(item.id, item);\n                currentMap.add(item.id);\n              });\n              if (sameQuery) {\n                const removed = [...this.#listItems.keys()].forEach(id => {\n                  if (!currentMap.has(id)) {\n                    this.#listItems.delete(id);\n                  }\n                });\n              }\n              this.#items = [...this.#listItems.values()];\n              items.forEach(item => this.#ids.add(item.id));\n              this.trigger(\"items.changed\");\n            },\n            error: err => {\n              console.error(err);\n            }\n          });\n          return this.#promiseLoad;\n        } catch (error) {\n          console.error(\"Error al cargar los elementos del store:\", error);\n          return {\n            status: false,\n            data: []\n          };\n        }\n      }\n      async save(data) {\n        const process = (entries, offline = 0) => {\n          return entries.map(item => {\n            const record = item.getProperties && typeof item.getProperties === \"function\" ? item.getProperties() : item;\n            const toSave = {\n              ...record,\n              offline,\n              instanceId: item.instanceId\n            };\n            return toSave;\n          });\n        };\n        data = process(data, this.isOnline ? 0 : 1);\n        if (this.#apply) return;\n        await this.#registryFactory.init();\n        await this.saveAll(data, this.#storeName);\n      }\n      async saveAll(items, storeName) {\n        if (!this.#apply) return;\n        const elements = items.map(item => {\n          const registry = new _registry.Registry(storeName);\n          if (item.deleted) {\n            registry.isDeleted = true;\n          }\n          registry.setValues(item);\n          return registry;\n        });\n        const store = this.#database.db[storeName];\n        const promises = [];\n        const chunks = [];\n        while (elements.length > 0) {\n          const batch = elements.splice(0, this.#batches);\n          const data = batch.map(item => item.getValues());\n          chunks.push(data);\n          promises.push(store.bulkPut(data));\n        }\n        try {\n          const results = await Promise.allSettled(promises);\n          const mappedFn = (result, index) => ({\n            ...result,\n            index,\n            data: chunks[index]\n          });\n          const failed = results.map(mappedFn).filter(result => result.status === \"rejected\");\n          if (!failed.length) return {\n            status: true\n          };else {\n            return {\n              status: false,\n              failed\n            };\n          }\n        } catch (e) {\n          return {\n            status: false,\n            failed: e\n          };\n        }\n      }\n      #processControl(control, conditions) {\n        this.#store[control];\n      }\n      async upsert(data, originalData) {\n        if (!this.#apply) return;\n        return this.#database.db.transaction(\"rw\", this.store, async () => {\n          const instanceIdToIdMap = /* @__PURE__ */new Map();\n          data.forEach(item => {\n            instanceIdToIdMap.set(item.instanceId, item.id);\n          });\n          await this.store.bulkPut(data);\n        });\n      }\n      async softDelete(ids) {\n        if (!this.#apply) return;\n        if (!Array.isArray(ids)) {\n          console.error(\"Expected an array of items for soft deletion\");\n          return {\n            status: false,\n            data: []\n          };\n        }\n        try {\n          const records = await this.store.bulkGet(ids);\n          const existingRecords = records.filter(record => record !== void 0);\n          if (!existingRecords.length) return;\n          const itemsToUpdate = existingRecords.map(record => ({\n            ...record,\n            isDeleted: 1\n          }));\n          await this.#store.bulkPut(itemsToUpdate);\n          return true;\n        } catch (error) {\n          console.error(\"Error occurred while performing a soft delete:\", error);\n          return {\n            status: false,\n            error: error.message\n          };\n        }\n      }\n    }\n    exports.CollectionLocalProvider = CollectionLocalProvider2;\n  }\n});\nims.set(\"./collection/publish\", {\n  hash: 3266852448,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.CollectionSaveManager = void 0;\n    class CollectionSaveManager {\n      #parent;\n      #bridge;\n      #localProvider;\n      #provider;\n      #localdb;\n      MAX_RETRIES = 3;\n      CHUNK_SIZE = 200;\n      #adapter;\n      constructor(parent, bridge) {\n        this.#parent = parent;\n        this.#bridge = bridge;\n        this.#adapter = this.#parent.responseAdapter;\n        this.init();\n      }\n      init() {\n        this.#localdb = this.#bridge.get(\"localdb\");\n        if (this.#localdb) {\n          this.#localProvider = this.#bridge.get(\"localProvider\");\n        } else {\n          console.warn(\"la colleccion no usa indexeddb\");\n        }\n        this.#provider = this.#bridge.get(\"provider\");\n      }\n      save = async (data = []) => {\n        if (!this.#localdb) return true;\n        await this.#localProvider.init();\n        await this.#localProvider.save(data);\n      };\n      publish = async (data = []) => {\n        try {\n          await this.save(data);\n          if (!this.#provider || this.#bridge.get(\"isOffline\")) return;\n          const response = await this.#provider.bulkSave(data);\n          if (!response.status) throw response.error;\n          return this.#adapter.toClient({\n            status: true\n          });\n        } catch (error) {\n          console.error(error);\n          return this.#adapter.toClient({\n            error\n          });\n        }\n      };\n      sendChunk = async chunk => {\n        const response = await this.#provider.bulkSave(chunk);\n        if (response.status) {\n          const data = response.data.entries.map(item => ({\n            ...item,\n            offline: 0,\n            instanceId: void 0\n          }));\n          await this.#localProvider.upsert(data, chunk);\n          return {\n            success: true,\n            chunk,\n            response\n          };\n        }\n        return {\n          success: false,\n          chunk,\n          response\n        };\n      };\n      splitDataIntoChunks = data => {\n        const chunks = [];\n        for (let i = 0; i < data.length; i += this.CHUNK_SIZE) {\n          chunks.push(data.slice(i, i + this.CHUNK_SIZE));\n        }\n        return chunks;\n      };\n      sync = async data => {\n        await this.#localProvider.init();\n        if (!data) data = await this.#parent.localProvider.store.where(\"offline\").equals(1).toArray();\n        const chunks = this.splitDataIntoChunks(data);\n        const failedChunks = [];\n        const successChunks = [];\n        for (const [index, chunk] of chunks.entries()) {\n          const result = await this.sendChunk(chunk);\n          if (!result.success) {\n            failedChunks.push(result);\n          } else successChunks.push(result);\n        }\n        this.#bridge.set(\"items\", []);\n        await this.#parent.load();\n        if (failedChunks.length) {\n          const message = failedChunks.length === chunks.length ? \"FAILED_SYNC\" : \"INCOMPLETE_SYNC\";\n          return this.#adapter.toClient({\n            data: {\n              failed: failedChunks,\n              success: successChunks,\n              error: message\n            }\n          });\n        }\n        return this.#adapter.toClient({\n          data: successChunks\n        });\n      };\n      toSync = async () => {\n        try {\n          await this.#localProvider.init();\n          return this.#localProvider.store.where(\"offline\").equals(1).toArray();\n        } catch (e) {\n          console.error(e);\n        }\n      };\n    }\n    exports.CollectionSaveManager = CollectionSaveManager;\n  }\n});\nims.set(\"./example/collection\", {\n  hash: 1024327027,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.Books = void 0;\n    var _collection = require2(\"../collection\");\n    var _index = require2(\"./index\");\n    class UserProvider {}\n    class Books2 extends _collection.Collection {\n      constructor() {\n        super({\n          provider: UserProvider,\n          storeName: \"books\",\n          db: \"test\",\n          item: _index.Book\n        });\n      }\n    }\n    exports.Books = Books2;\n  }\n});\nims.set(\"./example/index\", {\n  hash: 1295999388,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.Book = void 0;\n    var _index = require2(\"../item/index\");\n    class UserProvider {}\n    class Book2 extends _index.Item {\n      properties = [\"id\", \"title\", \"author\", \"year\"];\n      constructor({\n        id = void 0\n      } = {}) {\n        super({\n          id,\n          storeName: \"book\",\n          db: \"test\"\n        });\n      }\n    }\n    exports.Book = Book2;\n  }\n});\nims.set(\"./interfaces/provider\", {\n  hash: 2422807829,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n  }\n});\nims.set(\"./item/index\", {\n  hash: 4012321228,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.Item = void 0;\n    var _model = require2(\"@beyond-js/reactive/model\");\n    var _localProvider = require2(\"./local-provider\");\n    var _save = require2(\"./save\");\n    var _load = require2(\"./load\");\n    var _core = require2(\"@beyond-js/kernel/core\");\n    var _adapter = require2(\"../adapter\");\n    class Item2 extends _model.ReactiveModel {\n      #info = /* @__PURE__ */new Map();\n      #localData = /* @__PURE__ */new Map();\n      localdb = true;\n      #provider;\n      get provider() {\n        return this.#provider;\n      }\n      storeName;\n      db;\n      #ignoredFields = [];\n      #skeleton = [];\n      localProvider;\n      unique = [];\n      #saveManager;\n      get skeleton() {\n        return this.#skeleton;\n      }\n      __get(property) {\n        return this[property];\n      }\n      #isDeleted = 0;\n      get isDeleted() {\n        return !!this.#isDeleted;\n      }\n      get store() {\n        return this.localProvider.store;\n      }\n      get isOnline() {\n        return this.localProvider.isOnline && !localStorage.getItem(\"reactive.offline\");\n      }\n      get instanceId() {\n        return this.localProvider.instanceId;\n      }\n      get isReady() {\n        return this.checkReady();\n      }\n      #loadManager;\n      #objectReady = false;\n      #promiseReady;\n      #initPromise;\n      #config;\n      #responseAdapter;\n      get responseAdapter() {\n        return this.#responseAdapter;\n      }\n      constructor(config = {}) {\n        super();\n        const {\n          db,\n          storeName,\n          localdb = true\n        } = config;\n        this.#config = config;\n        this.localdb = localdb;\n        this.#responseAdapter = _adapter.ResponseAdapter.get(this, this.#config?.adapter);\n        if (db) this.db = db;\n        if (storeName) this.storeName = storeName;\n        if (config.provider) {\n          if (typeof config.provider !== \"function\") {\n            throw new Error(\"Provider must be an function\");\n          }\n          this.#provider = new config.provider(this);\n        }\n        this.on(\"object.loaded\", this.checkReady);\n        this.reactiveProps([\"found\", \"landed\"]);\n        const getProperty = property => this.__get(property);\n        const setProperty = (property, value) => this[property] = value;\n        const bridge = {\n          get: getProperty,\n          set: setProperty\n        };\n        this.localProvider = new _localProvider.LocalProvider(this, bridge);\n        this.#saveManager = new _save.ItemSaveManager(this, bridge);\n        this.#loadManager = new _load.ItemLoadManager(this, bridge);\n        this.save = this.save.bind(this);\n        if (this.db && this.storeName) this.init(config);\n      }\n      async initialise() {\n        this.init(this.#config);\n      }\n      async init(config) {\n        try {\n          let id;\n          if (this.#initPromise) return this.#initPromise;\n          this.#initPromise = new _core.PendingPromise();\n          if (config.id) id = config.id;\n          await this.localProvider.init(id);\n          if (this.#skeleton && this.#skeleton.length > 0) {\n            this.properties = this.#skeleton;\n          }\n          if (config.properties) this.set(config.properties, true);\n          this.ready = true;\n          this.#initPromise.resolve(true);\n          this.trigger(\"object.loaded\");\n        } catch (e) {\n          console.error(\"error initializing\", e);\n        }\n      }\n      checkReady = () => {\n        if (this.ready) {\n          return this.ready;\n        }\n        if (this.#promiseReady) return this.#promiseReady;\n        this.#promiseReady = new _core.PendingPromise();\n        if (this.objectReady) this.#promiseReady.resolve(this.#objectReady);\n        const onReady = () => {\n          this.#objectReady = true;\n          this.#promiseReady.resolve(this.#objectReady);\n        };\n        this.on(\"object.loaded\", onReady);\n        return this.#promiseReady;\n      };\n      setOffline = value => this.localProvider.setOffline(value);\n      async set(data, init = false) {\n        await this.isReady;\n        if (init && this.localdb) {\n          this.#localData = new Map(Object.entries(data));\n          this.localProvider.save(data, init);\n        }\n        this.properties.forEach(property => {\n          if (typeof property === \"object\") {\n            if (data.hasOwnProperty(property.name)) {}\n            return;\n          }\n          if (data.hasOwnProperty(property)) this[property] = data[property];\n        });\n        this.triggerEvent();\n      }\n      getValues() {\n        const values = {};\n        const toIterate = this.skeleton.length ? this.skeleton : this.properties;\n        toIterate.forEach(field => {\n          if (this.hasOwnProperty(field)) values[field] = this[field];\n        });\n        return values;\n      }\n      getPropertyNames() {\n        return this.properties;\n      }\n      save(data) {\n        return this.#saveManager.save(data);\n      }\n      publish(data) {\n        return this.#saveManager.publish(data);\n      }\n      load(params) {\n        return this.#loadManager.load(params);\n      }\n      async delete() {\n        try {\n          this.#isDeleted = 1;\n          if (this.localProvider) await this.localProvider.delete();\n          if (this.provider) await this.provider.delete(this.id);\n          this.triggerEvent();\n          return true;\n        } catch (e) {\n          console.error(\"error\", e);\n        }\n      }\n    }\n    exports.Item = Item2;\n  }\n});\nims.set(\"./item/interfaces/config\", {\n  hash: 48964159,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n  }\n});\nims.set(\"./item/interfaces/item\", {\n  hash: 983423751,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n  }\n});\nims.set(\"./item/load\", {\n  hash: 1600377390,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.ItemLoadManager = void 0;\n    class ItemLoadManager {\n      #parent;\n      #localProvider;\n      #provider;\n      #getProperty;\n      #bridge;\n      #adapter;\n      ready;\n      constructor(parent, bridge) {\n        this.#parent = parent;\n        this.#getProperty = bridge.get;\n        this.#bridge = bridge;\n        this.#adapter = this.#parent.responseAdapter;\n        this.init();\n      }\n      init = () => {\n        this.#localProvider = this.#getProperty(\"localProvider\");\n        this.#provider = this.#getProperty(\"provider\");\n        this.ready = true;\n      };\n      load = async params => {\n        try {\n          await this.#getProperty(\"checkReady\")();\n          if (!params) {\n            params = {\n              id: this.#parent.id\n            };\n          }\n          const localdb = await this.#getProperty(\"localdb\");\n          const localProvider = this.#getProperty(\"localProvider\");\n          if (!params && this.#parent.id) params = {\n            id: this.#parent.id\n          };\n          if (localdb && localProvider) {\n            const localData = await localProvider.load(params);\n            if (localData?.status) this.#parent.set(localData.data, true);\n          }\n          if (localProvider && !localProvider.isOnline) return {\n            status: true\n          };\n          if (!this.#provider) return;\n          const remoteData = await this.remoteLoad(params);\n          if (!remoteData) {\n            this.#parent.found = false;\n            return this.#adapter.toClient();\n          }\n          this.#parent.found = true;\n          this.#parent.set(remoteData);\n          if (localdb) {\n            let same = true;\n            this.#parent.landed = true;\n            Object.keys(remoteData).forEach(key => {\n              let original = localProvider.registry.values;\n              if (original[key] !== remoteData[key]) same = false;\n            });\n            if (!same) await this.#localProvider.save(remoteData);\n          }\n          return this.#adapter.toClient({\n            data: remoteData\n          });\n        } catch (exc) {\n          return this.#adapter.toClient({\n            error: exc\n          });\n        } finally {\n          this.#parent.fetching = false;\n        }\n      };\n      remoteLoad = async params => {\n        if (!this.#parent.isOnline) return;\n        let loadMethod = this.#provider.data ? this.#provider.data.bind(this.#provider) : this.#provider.load.bind(this.#provider);\n        if (typeof loadMethod !== \"function\") {\n          console.error(\"The provider object is not defined correctly. It must have a data method\");\n          return;\n        }\n        const response = await loadMethod(params);\n        return this.#adapter.fromRemote(response);\n      };\n    }\n    exports.ItemLoadManager = ItemLoadManager;\n  }\n});\nims.set(\"./item/local-provider\", {\n  hash: 2259723247,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.LocalProvider = void 0;\n    var _model = require2(\"@beyond-js/reactive/model\");\n    var _database = require2(\"@beyond-js/reactive/database\");\n    var _factory = require2(\"../registry/factory\");\n    class LocalProvider2 extends _model.ReactiveModel {\n      #isOnline = globalThis.navigator.onLine;\n      #store;\n      get store() {\n        return this.#store;\n      }\n      #offline;\n      #isNew = false;\n      #database;\n      #storeName;\n      #databaseName;\n      #originalData;\n      #exists = false;\n      get originalData() {\n        return this.#originalData;\n      }\n      #db;\n      get isOnline() {\n        return this.#isOnline && !this.#offline && !localStorage.getItem(\"reactive.offline\");\n      }\n      #parent;\n      #getProperty;\n      #factoryRegistry;\n      #registry;\n      #localdb;\n      get localdb() {\n        return this.#parent.localdb;\n      }\n      #bridge;\n      get registry() {\n        return this.#registry;\n      }\n      #apply;\n      constructor(parent, bridge) {\n        super();\n        this.#getProperty = bridge.get;\n        const {\n          db,\n          storeName\n        } = parent;\n        this.__id = Math.floor(Math.random() * (1e5 - 1e3 + 1)) + 1e3;\n        this.#parent = parent;\n        this.#apply = db && storeName;\n        this.#databaseName = db;\n        this.#storeName = storeName;\n        this.#bridge = bridge;\n        this.#localdb = bridge.get(\"localdb\");\n        this.#factoryRegistry = _factory.RegistryFactory.get(db, this.#localdb);\n        this.load = this.load.bind(this);\n      }\n      setOffline(value) {\n        this.#offline = value;\n        this.triggerEvent();\n      }\n      init = async (id = void 0) => {\n        try {\n          if (this.#localdb) {\n            const database = await _database.DBManager.get(this.#databaseName);\n            this.#database = database;\n            this.#store = database.db[this.#storeName];\n          }\n          this.#isNew = !!id;\n          return this.#getRegistry(id);\n        } catch (e) {\n          console.error(e);\n        }\n      };\n      #isUnpublished(data) {\n        const properties = Object.keys(data);\n        const toCompare = {\n          ...this.#registry.values\n        };\n        return properties.some(prop => {\n          if (prop === \"id\") return false;\n          return toCompare[prop] !== data[prop];\n        });\n      }\n      async load(params = {}) {\n        try {\n          let id = params.id;\n          id = id ?? this.registry.values?.id;\n          if (!id) throw \"ID IS REQUIRED\";\n          await this.#getRegistry(id);\n          this.#parent.localLoaded = true;\n          this.#parent.set(this.#registry.values);\n          return {\n            status: true,\n            data: this.#registry.values\n          };\n        } catch (e) {\n          console.error(e);\n          return e;\n        }\n      }\n      #getRegistry = async id => {\n        let found = await this.#factoryRegistry.get(this.#storeName, id);\n        let data = {\n          id\n        };\n        if (!found && this.localdb && id) {\n          const store = this.#store;\n          const localData = await store.get(id);\n          data = localData;\n          found = true;\n        }\n        if (found) {\n          this.#parent.found = found;\n          this.#parent.loaded = true;\n        }\n        const registry = this.#factoryRegistry.create(this.#storeName, data);\n        this.#registry = registry;\n        this.#parent.set(this.#registry.values);\n        this.#isNew = this.#registry?.values?.isNew ? true : false;\n        return this.#registry.values;\n      };\n      async save(data, backend = false) {\n        try {\n          if (!this.#isUnpublished(data)) return;\n          data.offline = this.isOnline ? 0 : 1;\n          data.isNew = !this.#isNew ? 0 : 1;\n          const duplicated = await this.validateUniqueFields(data);\n          if (duplicated.length) return {\n            error: \"duplicated\",\n            fields: duplicated\n          };\n          await this.#update(data);\n          return this;\n        } catch (e) {\n          console.error(\"error saving\", e.message);\n        }\n      }\n      async validateUniqueFields(data) {\n        if (!this.localdb) return [];\n        if (!this.#getProperty(\"unique\").length) return [];\n        const checkPromises = this.#getProperty(\"unique\").map(field => this.#store.where(field).equals(data[field]).count().then(count => {\n          if (count) {\n            return field;\n          }\n          return null;\n        }));\n        const duplicateFields = (await Promise.all(checkPromises)).filter(field => field !== null);\n        return duplicateFields;\n      }\n      delete = async () => {\n        const response = await this.#update({\n          isDeleted: 1\n        });\n        return response;\n      };\n      async #update(data) {\n        const updated = this.#registry.setValues(data);\n        if (!updated) return;\n        const store = this.#database.db[this.#storeName];\n        await store.put(data);\n        this.triggerEvent();\n        return true;\n      }\n    }\n    exports.LocalProvider = LocalProvider2;\n  }\n});\nims.set(\"./item/save\", {\n  hash: 948872012,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.ItemSaveManager = void 0;\n    class ItemSaveManager {\n      #parent;\n      #getProperty;\n      #bridge;\n      #provider;\n      #localProvider;\n      #adapter;\n      constructor(parent, bridge) {\n        this.#parent = parent;\n        this.#getProperty = bridge.get;\n        this.#bridge = bridge;\n        this.#adapter = this.#parent.responseAdapter;\n        this.init();\n      }\n      init() {\n        this.#parent.localUpdate = this.localUpdate;\n        this.#localProvider = this.#getProperty(\"localProvider\");\n        this.#provider = this.#getProperty(\"provider\");\n      }\n      save = async data => {\n        try {\n          await this.#getProperty(\"checkReady\")();\n          if (data) {\n            this.#parent.set(data);\n          }\n          if (!this.#parent.isUnpublished) return;\n          const properties = {\n            ...data,\n            ...this.#parent.getProperties()\n          };\n          properties.isNew = this.#localProvider.registry.isNew;\n          if (this.#parent.isOnline) {\n            const response = await this.#publish(properties);\n            this.#adapter.fromRemote(response);\n            this.#localProvider.registry.isNew = false;\n          }\n          if (this.#localProvider) {\n            await this.#localProvider.save(properties);\n          }\n          this.#parent.triggerEvent();\n          return this.#adapter.toClient();\n        } catch (e) {\n          console.error(\"error saving\", e);\n          return e;\n        }\n      };\n      #publish = async properties => {\n        try {\n          if (!this.#provider || !this.#bridge.get(\"isOnline\")) return;\n          const response = await this.#provider.publish(properties);\n          const data = this.#adapter.fromRemote(response);\n          if (this.#localProvider) {\n            this.#localProvider.save(data, true);\n            this.#localProvider.triggerEvent();\n          }\n          return this.#adapter.toClient({\n            data\n          });\n        } catch (error) {\n          console.error(\"ERROR PUBLISHING\", error);\n          return this.#adapter.toClient({\n            error\n          });\n        }\n      };\n      publish = this.save;\n      sync = () => {\n        const provider = this.#getProperty(\"localProvider\");\n        if (!provider.registry.values.offline) {\n          console.warn(\"registry already synced\");\n          return;\n        }\n        this.#publish(provider.registry.values);\n      };\n      localUpdate = async (data = void 0) => {\n        try {\n          await this.#getProperty(\"checkReady\")();\n          if (data) {\n            this.#parent.set(data);\n          }\n          const properties = this.#parent.getProperties();\n          if (this.#localProvider) {\n            await this.#localProvider.save(properties, false);\n          }\n          this.#parent.triggerEvent();\n          return this.#adapter.toClient();\n        } catch (e) {\n          console.error(\"error updating locally\", e);\n        }\n      };\n    }\n    exports.ItemSaveManager = ItemSaveManager;\n  }\n});\nims.set(\"./providers/collection\", {\n  hash: 1203865910,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.CollectionProvider = void 0;\n    class CollectionProvider2 {\n      list(specs) {}\n      publish(props) {}\n      load(specs) {}\n    }\n    exports.CollectionProvider = CollectionProvider2;\n  }\n});\nims.set(\"./providers/item\", {\n  hash: 632847434,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.ItemProvider = void 0;\n    class ItemProvider2 {\n      delete(id) {}\n      publish(props) {}\n      load(specs) {}\n    }\n    exports.ItemProvider = ItemProvider2;\n  }\n});\nims.set(\"./registry/factory\", {\n  hash: 2156111450,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.RegistryFactory = void 0;\n    var _model = require2(\"@beyond-js/reactive/model\");\n    var _index = require2(\"./index\");\n    var _core = require2(\"@beyond-js/kernel/core\");\n    class RegistryFactory2 extends _model.ReactiveModel {\n      #stores = /* @__PURE__ */new Map();\n      #dbName;\n      #localdb;\n      constructor(dbName, localdb = true) {\n        super();\n        this.#dbName = dbName;\n        this.#localdb = localdb;\n        this.init();\n      }\n      #promiseReady;\n      async init() {\n        if (this.ready) return true;\n        if (this.#promiseReady) return this.#promiseReady;\n        this.#promiseReady = new _core.PendingPromise();\n        this.#promiseReady.resolve();\n        this.#promiseReady = void 0;\n        this.ready = true;\n      }\n      registerList(storeName, items) {\n        const registries = items.map(item => {\n          if (this.hasItem(storeName, item.id)) {\n            return this.getItem(storeName, item.id);\n          }\n          return this.create(storeName, item);\n        });\n      }\n      hasItem(storeName, id) {\n        return this.#stores.has(storeName) && this.#stores.get(storeName).has(id);\n      }\n      getItem(storeName, id) {\n        if (!this.hasItem(storeName, id)) throw new Error(`Item ${id} does not exists in store ${storeName}`);\n        return this.#stores.get(storeName).get(id);\n      }\n      #getStore(store) {\n        if (!this.#stores.has(store)) this.#stores.set(store, /* @__PURE__ */new Map());\n        return this.#stores.get(store);\n      }\n      create(storeName, data) {\n        const registry = new _index.Registry(storeName, data);\n        registry.setValues(data);\n        this.#getStore(storeName).set(registry.values.id, registry);\n        return registry;\n      }\n      async get(storeName, id = void 0) {\n        if (!this.#stores.has(storeName)) this.#stores.set(storeName, /* @__PURE__ */new Map());\n        if (this.#stores.has(storeName) && this.#stores.get(storeName).has(id)) {\n          const registry = this.#stores.get(storeName).get(id);\n          return registry;\n        }\n      }\n      async has(storeName, id) {\n        if (this.#stores.has(storeName) && this.#stores.get(storeName).has(id)) return true;\n      }\n      static #dbs = /* @__PURE__ */new Map();\n      static get(dbName, localdb) {\n        if (this.#dbs.has(dbName)) return this.#dbs.get(dbName);\n        const db = new RegistryFactory2(dbName, localdb);\n        this.#dbs.set(dbName, db);\n        return db;\n      }\n    }\n    exports.RegistryFactory = RegistryFactory2;\n  }\n});\nims.set(\"./registry/index\", {\n  hash: 963780215,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.Registry = void 0;\n    var _model = require2(\"@beyond-js/reactive/model\");\n    var _uuid = require2(\"uuid\");\n    class Registry extends _model.ReactiveModel {\n      #values = {};\n      get values() {\n        return this.#values;\n      }\n      #id;\n      #store;\n      #instanceId;\n      #isDeleted;\n      #isNew;\n      get isNew() {\n        return this.#isNew;\n      }\n      set isNew(value) {\n        this.#isNew = value;\n        this.triggerEvent();\n      }\n      #keyId;\n      get isDeleted() {\n        return this.#isDeleted;\n      }\n      set isDeleted(value) {\n        if (value === this.#isDeleted) return;\n        this.#isDeleted = value;\n        this.triggerEvent();\n      }\n      constructor(store, data = {\n        id: void 0\n      }) {\n        super();\n        const {\n          id\n        } = data;\n        this.#store = store;\n        this.#isNew = id === void 0;\n        this.#id = id;\n        this.#instanceId = id ?? (0, _uuid.v4)();\n        if (!id) this.#id = this.#instanceId;\n        if (this.#id) this.#values.id = this.#id;\n      }\n      setValues = data => {\n        if (!data) {\n          return;\n        }\n        const props = Object.keys(data);\n        let updated = false;\n        if (!data.id) data.id = this.#id;\n        const newValues = {\n          ...this.#values\n        };\n        props.forEach(property => {\n          if (data[property] === newValues[property]) return;\n          newValues[property] = data[property];\n          updated = true;\n        });\n        newValues.isDeleleted = this.isDeleted === 1;\n        this.#values = newValues;\n        this.triggerEvent();\n        return updated;\n      };\n      getValues() {\n        const values = {\n          ...this.#values\n        };\n        if (this.#instanceId) values.instanceId = this.#instanceId;\n        return values;\n      }\n    }\n    exports.Registry = Registry;\n  }\n});\nims.set(\"./registry/store\", {\n  hash: 51750468,\n  creator: function (require2, exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.StoreRecords = void 0;\n    var _model = require2(\"@beyond-js/reactive/model\");\n    class StoreRecords2 extends _model.ReactiveModel {}\n    exports.StoreRecords = StoreRecords2;\n    const storeFactory = new StoreRecords2();\n  }\n});\n__pkg.exports.descriptor = [{\n  \"im\": \"./adapter/index\",\n  \"from\": \"TCustomAdapter\",\n  \"name\": \"TCustomAdapter\"\n}, {\n  \"im\": \"./adapter/index\",\n  \"from\": \"IConfig\",\n  \"name\": \"IConfig\"\n}, {\n  \"im\": \"./adapter/interface\",\n  \"from\": \"IResponseAdapter\",\n  \"name\": \"IResponseAdapter\"\n}, {\n  \"im\": \"./collection/index\",\n  \"from\": \"Collection\",\n  \"name\": \"Collection\"\n}, {\n  \"im\": \"./collection/local-provider\",\n  \"from\": \"CollectionLocalProvider\",\n  \"name\": \"CollectionLocalProvider\"\n}, {\n  \"im\": \"./example/collection\",\n  \"from\": \"Books\",\n  \"name\": \"Books\"\n}, {\n  \"im\": \"./example/index\",\n  \"from\": \"Book\",\n  \"name\": \"Book\"\n}, {\n  \"im\": \"./item/index\",\n  \"from\": \"Item\",\n  \"name\": \"Item\"\n}, {\n  \"im\": \"./item/interfaces/item\",\n  \"from\": \"IItem\",\n  \"name\": \"IItem\"\n}, {\n  \"im\": \"./item/local-provider\",\n  \"from\": \"LocalProvider\",\n  \"name\": \"LocalProvider\"\n}, {\n  \"im\": \"./providers/collection\",\n  \"from\": \"CollectionProvider\",\n  \"name\": \"CollectionProvider\"\n}, {\n  \"im\": \"./providers/item\",\n  \"from\": \"ItemProvider\",\n  \"name\": \"ItemProvider\"\n}, {\n  \"im\": \"./registry/factory\",\n  \"from\": \"RegistryFactory\",\n  \"name\": \"RegistryFactory\"\n}, {\n  \"im\": \"./registry/store\",\n  \"from\": \"StoreRecords\",\n  \"name\": \"StoreRecords\"\n}];\nvar TCustomAdapter, IConfig, IResponseAdapter, Collection, CollectionLocalProvider, Books, Book, Item, IItem, LocalProvider, CollectionProvider, ItemProvider, RegistryFactory, StoreRecords;\n__pkg.exports.process = function ({\n  require: require2,\n  prop,\n  value\n}) {\n  (require2 || prop === \"TCustomAdapter\") && (TCustomAdapter = require2 ? require2(\"./adapter/index\").TCustomAdapter : value);\n  (require2 || prop === \"IConfig\") && (IConfig = require2 ? require2(\"./adapter/index\").IConfig : value);\n  (require2 || prop === \"IResponseAdapter\") && (IResponseAdapter = require2 ? require2(\"./adapter/interface\").IResponseAdapter : value);\n  (require2 || prop === \"Collection\") && (Collection = require2 ? require2(\"./collection/index\").Collection : value);\n  (require2 || prop === \"CollectionLocalProvider\") && (CollectionLocalProvider = require2 ? require2(\"./collection/local-provider\").CollectionLocalProvider : value);\n  (require2 || prop === \"Books\") && (Books = require2 ? require2(\"./example/collection\").Books : value);\n  (require2 || prop === \"Book\") && (Book = require2 ? require2(\"./example/index\").Book : value);\n  (require2 || prop === \"Item\") && (Item = require2 ? require2(\"./item/index\").Item : value);\n  (require2 || prop === \"IItem\") && (IItem = require2 ? require2(\"./item/interfaces/item\").IItem : value);\n  (require2 || prop === \"LocalProvider\") && (LocalProvider = require2 ? require2(\"./item/local-provider\").LocalProvider : value);\n  (require2 || prop === \"CollectionProvider\") && (CollectionProvider = require2 ? require2(\"./providers/collection\").CollectionProvider : value);\n  (require2 || prop === \"ItemProvider\") && (ItemProvider = require2 ? require2(\"./providers/item\").ItemProvider : value);\n  (require2 || prop === \"RegistryFactory\") && (RegistryFactory = require2 ? require2(\"./registry/factory\").RegistryFactory : value);\n  (require2 || prop === \"StoreRecords\") && (StoreRecords = require2 ? require2(\"./registry/store\").StoreRecords : value);\n};\nvar __beyond_pkg = __pkg;\nvar hmr = new function () {\n  this.on = (event, listener) => void 0;\n  this.off = (event, listener) => void 0;\n}();\n__pkg.initialise(ims);\n};\n\ncode(module, require);\n_exports(module.exports);\n}}});\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","dependencies":[{"id":"@beyond-js/kernel@0.1.9/bundle","path":"C:\\Users\\Bryant\\Documents\\Private Projects\\dashboard-beyond\\client\\node_modules\\@beyond-js\\kernel"},{"id":"@beyond-js/reactive@1.1.6/settings","path":"C:\\Users\\Bryant\\Documents\\Private Projects\\dashboard-beyond\\client\\node_modules\\@beyond-js\\reactive"},{"id":"@beyond-js/events@0.0.6/events","path":"C:\\Users\\Bryant\\Documents\\Private Projects\\dashboard-beyond\\client\\node_modules\\@beyond-js\\events"},{"id":"@beyond-js/reactive@1.1.6/model","path":"C:\\Users\\Bryant\\Documents\\Private Projects\\dashboard-beyond\\client\\node_modules\\@beyond-js\\reactive"},{"id":"dexie@3.2.4","path":"C:\\Users\\Bryant\\Documents\\Private Projects\\dashboard-beyond\\client\\node_modules\\dexie"},{"id":"@beyond-js/kernel@0.1.9/core","path":"C:\\Users\\Bryant\\Documents\\Private Projects\\dashboard-beyond\\client\\node_modules\\@beyond-js\\kernel"},{"id":"@beyond-js/reactive@1.1.6/database","path":"C:\\Users\\Bryant\\Documents\\Private Projects\\dashboard-beyond\\client\\node_modules\\@beyond-js\\reactive"},{"id":"uuid@9.0.1","path":"C:\\Users\\Bryant\\Documents\\Private Projects\\dashboard-beyond\\client\\node_modules\\uuid"}],"warnings":[]}