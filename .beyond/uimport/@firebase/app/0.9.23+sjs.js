{"code":"System.register([\"@firebase/util@1.9.3\",\"@firebase/component@0.6.4\",\"@firebase/logger@0.4.0\",\"idb@7.1.1\"], (_exports, _context) => {\n\nconst bimport = specifier => {\n\tconst dependencies = new Map([[\"@firebase/util\",\"1.9.3\"],[\"@firebase/component\",\"0.6.4\"],[\"@firebase/logger\",\"0.4.0\"],[\"idb\",\"7.1.1\"],[\"@firebase/app\",\"0.9.23\"]]);\n\treturn globalThis.bimport(globalThis.bimport.resolve(specifier, dependencies));\n};\n\n\nvar dependencies = new Map();\nvar require = dependency => dependencies.get(dependency);\nreturn {\nsetters: [dep => dependencies.set('@firebase/util@1.9.3', dep), dep => dependencies.set('@firebase/component@0.6.4', dep), dep => dependencies.set('@firebase/logger@0.4.0', dep), dep => dependencies.set('idb@7.1.1', dep)],\nexecute: function() {\n// Prevent esbuild from considering the context to be amd\nconst define = void 0;\nconst module = {};\n\nconst code = (module, require) => {\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name2 in all) __defProp(target, name2, {\n    get: all[name2],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// .beyond/uimport/@firebase/app.0.9.23.js\nvar app_0_9_23_exports = {};\n__export(app_0_9_23_exports, {\n  FirebaseError: () => import_util2.FirebaseError,\n  SDK_VERSION: () => SDK_VERSION,\n  _DEFAULT_ENTRY_NAME: () => DEFAULT_ENTRY_NAME,\n  _addComponent: () => _addComponent,\n  _addOrOverwriteComponent: () => _addOrOverwriteComponent,\n  _apps: () => _apps,\n  _clearComponents: () => _clearComponents,\n  _components: () => _components,\n  _getProvider: () => _getProvider,\n  _registerComponent: () => _registerComponent,\n  _removeServiceInstance: () => _removeServiceInstance,\n  deleteApp: () => deleteApp,\n  getApp: () => getApp,\n  getApps: () => getApps,\n  initializeApp: () => initializeApp,\n  onLog: () => onLog,\n  registerVersion: () => registerVersion,\n  setLogLevel: () => setLogLevel\n});\nmodule.exports = __toCommonJS(app_0_9_23_exports);\n\n// node_modules/@firebase/app/dist/esm/index.esm2017.js\nvar import_component = require(\"@firebase/component@0.6.4\");\nvar import_logger = require(\"@firebase/logger@0.4.0\");\nvar import_util = require(\"@firebase/util@1.9.3\");\nvar import_util2 = require(\"@firebase/util@1.9.3\");\nvar import_idb = require(\"idb@7.1.1\");\nvar PlatformLoggerServiceImpl = class {\n  constructor(container) {\n    this.container = container;\n  }\n  getPlatformInfoString() {\n    const providers = this.container.getProviders();\n    return providers.map(provider => {\n      if (isVersionServiceProvider(provider)) {\n        const service = provider.getImmediate();\n        return `${service.library}/${service.version}`;\n      } else {\n        return null;\n      }\n    }).filter(logString => logString).join(\" \");\n  }\n};\nfunction isVersionServiceProvider(provider) {\n  const component = provider.getComponent();\n  return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\";\n}\nvar name$o = \"@firebase/app\";\nvar version$1 = \"0.9.23\";\nvar logger = new import_logger.Logger(\"@firebase/app\");\nvar name$n = \"@firebase/app-compat\";\nvar name$m = \"@firebase/analytics-compat\";\nvar name$l = \"@firebase/analytics\";\nvar name$k = \"@firebase/app-check-compat\";\nvar name$j = \"@firebase/app-check\";\nvar name$i = \"@firebase/auth\";\nvar name$h = \"@firebase/auth-compat\";\nvar name$g = \"@firebase/database\";\nvar name$f = \"@firebase/database-compat\";\nvar name$e = \"@firebase/functions\";\nvar name$d = \"@firebase/functions-compat\";\nvar name$c = \"@firebase/installations\";\nvar name$b = \"@firebase/installations-compat\";\nvar name$a = \"@firebase/messaging\";\nvar name$9 = \"@firebase/messaging-compat\";\nvar name$8 = \"@firebase/performance\";\nvar name$7 = \"@firebase/performance-compat\";\nvar name$6 = \"@firebase/remote-config\";\nvar name$5 = \"@firebase/remote-config-compat\";\nvar name$4 = \"@firebase/storage\";\nvar name$3 = \"@firebase/storage-compat\";\nvar name$2 = \"@firebase/firestore\";\nvar name$1 = \"@firebase/firestore-compat\";\nvar name = \"firebase\";\nvar version = \"10.6.0\";\nvar DEFAULT_ENTRY_NAME = \"[DEFAULT]\";\nvar PLATFORM_LOG_STRING = {\n  [name$o]: \"fire-core\",\n  [name$n]: \"fire-core-compat\",\n  [name$l]: \"fire-analytics\",\n  [name$m]: \"fire-analytics-compat\",\n  [name$j]: \"fire-app-check\",\n  [name$k]: \"fire-app-check-compat\",\n  [name$i]: \"fire-auth\",\n  [name$h]: \"fire-auth-compat\",\n  [name$g]: \"fire-rtdb\",\n  [name$f]: \"fire-rtdb-compat\",\n  [name$e]: \"fire-fn\",\n  [name$d]: \"fire-fn-compat\",\n  [name$c]: \"fire-iid\",\n  [name$b]: \"fire-iid-compat\",\n  [name$a]: \"fire-fcm\",\n  [name$9]: \"fire-fcm-compat\",\n  [name$8]: \"fire-perf\",\n  [name$7]: \"fire-perf-compat\",\n  [name$6]: \"fire-rc\",\n  [name$5]: \"fire-rc-compat\",\n  [name$4]: \"fire-gcs\",\n  [name$3]: \"fire-gcs-compat\",\n  [name$2]: \"fire-fst\",\n  [name$1]: \"fire-fst-compat\",\n  \"fire-js\": \"fire-js\",\n  [name]: \"fire-js-all\"\n};\nvar _apps = /* @__PURE__ */new Map();\nvar _components = /* @__PURE__ */new Map();\nfunction _addComponent(app, component) {\n  try {\n    app.container.addComponent(component);\n  } catch (e) {\n    logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\n  }\n}\nfunction _addOrOverwriteComponent(app, component) {\n  app.container.addOrOverwriteComponent(component);\n}\nfunction _registerComponent(component) {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(`There were multiple attempts to register component ${componentName}.`);\n    return false;\n  }\n  _components.set(componentName, component);\n  for (const app of _apps.values()) {\n    _addComponent(app, component);\n  }\n  return true;\n}\nfunction _getProvider(app, name2) {\n  const heartbeatController = app.container.getProvider(\"heartbeat\").getImmediate({\n    optional: true\n  });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return app.container.getProvider(name2);\n}\nfunction _removeServiceInstance(app, name2, instanceIdentifier = DEFAULT_ENTRY_NAME) {\n  _getProvider(app, name2).clearInstance(instanceIdentifier);\n}\nfunction _clearComponents() {\n  _components.clear();\n}\nvar ERRORS = {\n  [\"no-app\"]: \"No Firebase App '{$appName}' has been created - call initializeApp() first\",\n  [\"bad-app-name\"]: \"Illegal App name: '{$appName}\",\n  [\"duplicate-app\"]: \"Firebase App named '{$appName}' already exists with different options or config\",\n  [\"app-deleted\"]: \"Firebase App named '{$appName}' already deleted\",\n  [\"no-options\"]: \"Need to provide options, when not being deployed to hosting via source.\",\n  [\"invalid-app-argument\"]: \"firebase.{$appName}() takes either no argument or a Firebase App instance.\",\n  [\"invalid-log-argument\"]: \"First argument to `onLog` must be null or a function.\",\n  [\"idb-open\"]: \"Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.\",\n  [\"idb-get\"]: \"Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.\",\n  [\"idb-set\"]: \"Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.\",\n  [\"idb-delete\"]: \"Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.\"\n};\nvar ERROR_FACTORY = new import_util.ErrorFactory(\"app\", \"Firebase\", ERRORS);\nvar FirebaseAppImpl = class {\n  constructor(options, config, container) {\n    this._isDeleted = false;\n    this._options = Object.assign({}, options);\n    this._config = Object.assign({}, config);\n    this._name = config.name;\n    this._automaticDataCollectionEnabled = config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(new import_component.Component(\"app\", () => this, \"PUBLIC\"));\n  }\n  get automaticDataCollectionEnabled() {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n  set automaticDataCollectionEnabled(val) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n  get name() {\n    this.checkDestroyed();\n    return this._name;\n  }\n  get options() {\n    this.checkDestroyed();\n    return this._options;\n  }\n  get config() {\n    this.checkDestroyed();\n    return this._config;\n  }\n  get container() {\n    return this._container;\n  }\n  get isDeleted() {\n    return this._isDeleted;\n  }\n  set isDeleted(val) {\n    this._isDeleted = val;\n  }\n  checkDestroyed() {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(\"app-deleted\", {\n        appName: this._name\n      });\n    }\n  }\n};\nvar SDK_VERSION = version;\nfunction initializeApp(_options, rawConfig = {}) {\n  let options = _options;\n  if (typeof rawConfig !== \"object\") {\n    const name3 = rawConfig;\n    rawConfig = {\n      name: name3\n    };\n  }\n  const config = Object.assign({\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false\n  }, rawConfig);\n  const name2 = config.name;\n  if (typeof name2 !== \"string\" || !name2) {\n    throw ERROR_FACTORY.create(\"bad-app-name\", {\n      appName: String(name2)\n    });\n  }\n  options || (options = (0, import_util.getDefaultAppConfig)());\n  if (!options) {\n    throw ERROR_FACTORY.create(\"no-options\");\n  }\n  const existingApp = _apps.get(name2);\n  if (existingApp) {\n    if ((0, import_util.deepEqual)(options, existingApp.options) && (0, import_util.deepEqual)(config, existingApp.config)) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(\"duplicate-app\", {\n        appName: name2\n      });\n    }\n  }\n  const container = new import_component.ComponentContainer(name2);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n  const newApp = new FirebaseAppImpl(options, config, container);\n  _apps.set(name2, newApp);\n  return newApp;\n}\nfunction getApp(name2 = DEFAULT_ENTRY_NAME) {\n  const app = _apps.get(name2);\n  if (!app && name2 === DEFAULT_ENTRY_NAME && (0, import_util.getDefaultAppConfig)()) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(\"no-app\", {\n      appName: name2\n    });\n  }\n  return app;\n}\nfunction getApps() {\n  return Array.from(_apps.values());\n}\nasync function deleteApp(app) {\n  const name2 = app.name;\n  if (_apps.has(name2)) {\n    _apps.delete(name2);\n    await Promise.all(app.container.getProviders().map(provider => provider.delete()));\n    app.isDeleted = true;\n  }\n}\nfunction registerVersion(libraryKeyOrName, version2, variant) {\n  var _a;\n  let library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version2.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [`Unable to register library \"${library}\" with version \"${version2}\":`];\n    if (libraryMismatch) {\n      warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push(\"and\");\n    }\n    if (versionMismatch) {\n      warning.push(`version name \"${version2}\" contains illegal characters (whitespace or \"/\")`);\n    }\n    logger.warn(warning.join(\" \"));\n    return;\n  }\n  _registerComponent(new import_component.Component(`${library}-version`, () => ({\n    library,\n    version: version2\n  }), \"VERSION\"));\n}\nfunction onLog(logCallback, options) {\n  if (logCallback !== null && typeof logCallback !== \"function\") {\n    throw ERROR_FACTORY.create(\"invalid-log-argument\");\n  }\n  (0, import_logger.setUserLogHandler)(logCallback, options);\n}\nfunction setLogLevel(logLevel) {\n  (0, import_logger.setLogLevel)(logLevel);\n}\nvar DB_NAME = \"firebase-heartbeat-database\";\nvar DB_VERSION = 1;\nvar STORE_NAME = \"firebase-heartbeat-store\";\nvar dbPromise = null;\nfunction getDbPromise() {\n  if (!dbPromise) {\n    dbPromise = (0, import_idb.openDB)(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(\"idb-open\", {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\nasync function readHeartbeatsFromIndexedDB(app) {\n  try {\n    const db = await getDbPromise();\n    const result = await db.transaction(STORE_NAME).objectStore(STORE_NAME).get(computeKey(app));\n    return result;\n  } catch (e) {\n    if (e instanceof import_util.FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(\"idb-get\", {\n        originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\nasync function writeHeartbeatsToIndexedDB(app, heartbeatObject) {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, \"readwrite\");\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    await tx.done;\n  } catch (e) {\n    if (e instanceof import_util.FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(\"idb-set\", {\n        originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\nfunction computeKey(app) {\n  return `${app.name}!${app.options.appId}`;\n}\nvar MAX_HEADER_BYTES = 1024;\nvar STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1e3;\nvar HeartbeatServiceImpl = class {\n  constructor(container) {\n    this.container = container;\n    this._heartbeatsCache = null;\n    const app = this.container.getProvider(\"app\").getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n  async triggerHeartbeat() {\n    var _a;\n    const platformLogger = this.container.getProvider(\"platform-logger\").getImmediate();\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (((_a = this._heartbeatsCache) === null || _a === void 0 ? void 0 : _a.heartbeats) == null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    if (this._heartbeatsCache.lastSentHeartbeatDate === date || this._heartbeatsCache.heartbeats.some(singleDateHeartbeat => singleDateHeartbeat.date === date)) {\n      return;\n    } else {\n      this._heartbeatsCache.heartbeats.push({\n        date,\n        agent\n      });\n    }\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(singleDateHeartbeat => {\n      const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n      const now = Date.now();\n      return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n    });\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n  async getHeartbeatsHeader() {\n    var _a;\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    if (((_a = this._heartbeatsCache) === null || _a === void 0 ? void 0 : _a.heartbeats) == null || this._heartbeatsCache.heartbeats.length === 0) {\n      return \"\";\n    }\n    const date = getUTCDateString();\n    const {\n      heartbeatsToSend,\n      unsentEntries\n    } = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats);\n    const headerString = (0, import_util.base64urlEncodeWithoutPadding)(JSON.stringify({\n      version: 2,\n      heartbeats: heartbeatsToSend\n    }));\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n};\nfunction getUTCDateString() {\n  const today = new Date();\n  return today.toISOString().substring(0, 10);\n}\nfunction extractHeartbeatsForHeader(heartbeatsCache, maxSize = MAX_HEADER_BYTES) {\n  const heartbeatsToSend = [];\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    const heartbeatEntry = heartbeatsToSend.find(hb => hb.agent === singleDateHeartbeat.agent);\n    if (!heartbeatEntry) {\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\nvar HeartbeatStorageImpl = class {\n  constructor(app) {\n    this.app = app;\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck() {\n    if (!(0, import_util.isIndexedDBAvailable)()) {\n      return false;\n    } else {\n      return (0, import_util.validateIndexedDBOpenable)().then(() => true).catch(() => false);\n    }\n  }\n  async read() {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return {\n        heartbeats: []\n      };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || {\n        heartbeats: []\n      };\n    }\n  }\n  async overwrite(heartbeatsObject) {\n    var _a;\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  async add(heartbeatsObject) {\n    var _a;\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [...existingHeartbeatsObject.heartbeats, ...heartbeatsObject.heartbeats]\n      });\n    }\n  }\n};\nfunction countBytes(heartbeatsCache) {\n  return (0, import_util.base64urlEncodeWithoutPadding)(JSON.stringify({\n    version: 2,\n    heartbeats: heartbeatsCache\n  })).length;\n}\nfunction registerCoreComponents(variant) {\n  _registerComponent(new import_component.Component(\"platform-logger\", container => new PlatformLoggerServiceImpl(container), \"PRIVATE\"));\n  _registerComponent(new import_component.Component(\"heartbeat\", container => new HeartbeatServiceImpl(container), \"PRIVATE\"));\n  registerVersion(name$o, version$1, variant);\n  registerVersion(name$o, version$1, \"esm2017\");\n  registerVersion(\"fire-js\", \"\");\n}\nregisterCoreComponents(\"\");\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n};\n\ncode(module, require);\n_exports(module.exports);\n}}});\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","dependencies":[{"id":"@firebase/util@1.9.3","path":"C:\\Users\\Bryant\\Documents\\Private Projects\\dashboard-beyond\\client\\node_modules\\@firebase\\util"},{"id":"@firebase/component@0.6.4","path":"C:\\Users\\Bryant\\Documents\\Private Projects\\dashboard-beyond\\client\\node_modules\\@firebase\\component"},{"id":"@firebase/logger@0.4.0","path":"C:\\Users\\Bryant\\Documents\\Private Projects\\dashboard-beyond\\client\\node_modules\\@firebase\\logger"},{"id":"idb@7.1.1","path":"C:\\Users\\Bryant\\Documents\\Private Projects\\dashboard-beyond\\client\\node_modules\\idb"}],"warnings":[]}