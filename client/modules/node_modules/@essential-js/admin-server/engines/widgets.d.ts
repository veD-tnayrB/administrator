/************
Processor: ts
************/

import * as __beyond_dep_ns_0 from '@essential-js/admin-server/types';
import * as __beyond_dep_ns_1 from '@essential-js/admin-server/helpers';
// cases/dashboard/get.ts
declare namespace ns_0 {
  import IProfile = __beyond_dep_ns_0.IProfile;
  export interface IGetDashboardParams {
    userId: string;
    profiles: IProfile[];
  }
  export class GetDashboard {
    static execute: (params: IGetDashboardParams) => Promise<{
      status: boolean;
      data: {
        entries: any[];
        allWidgets: any;
      };
      error?: undefined;
    } | {
      status: boolean;
      error: any;
      data?: undefined;
    }>;
  }
}


// cases/dashboard/save.ts
declare namespace ns_1 {
  import IWidget = __beyond_dep_ns_0.IWidget;
  export interface ISaveDashboardParams {
    data: IWidget[];
    userId: string;
  }
  export class SaveDashboard {
    static execute: ({
      data,
      userId
    }: ISaveDashboardParams) => Promise<{
      status: boolean;
      error?: undefined;
    } | {
      status: boolean;
      error: any;
    }>;
  }
}


// index.ts
declare namespace ns_2 {
  import Manager = __beyond_dep_ns_1.Manager;
  import IGetDashboardParams = ns_0.IGetDashboardParams;
  import ISaveDashboardParams = ns_1.ISaveDashboardParams;
  import IWidget = __beyond_dep_ns_0.IWidget;
  export class WidgetsManager extends Manager<IWidget> {
    constructor();
    getDashboard: (params: IGetDashboardParams) => Promise<{
      status: boolean;
      data: {
        entries: any[];
        allWidgets: any;
      };
      error?: undefined;
    } | {
      status: boolean;
      error: any;
      data?: undefined;
    }>;
    saveDashboard: (params: ISaveDashboardParams) => Promise<{
      status: boolean;
      error?: undefined;
    } | {
      status: boolean;
      error: any;
    }>;
    getTotals: () => Promise<{
      status: boolean;
      data: {
        users: any;
        notifications: any;
        profiles: any;
      };
      error?: undefined;
    } | {
      status: boolean;
      error: any;
      data?: undefined;
    }>;
  }
  export const Widgets: WidgetsManager;
}


export import Widgets = ns_2.Widgets;

export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };