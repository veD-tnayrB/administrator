/************
Processor: ts
************/

import * as __beyond_dep_ns_0 from 'react';
import __beyond_dep_def_0 from 'react';
import * as __beyond_dep_ns_1 from '@essential-js/admin/models';
import * as __beyond_dep_ns_2 from '@beyond-js/react-18-widgets/base';
import * as __beyond_dep_ns_3 from '@beyond-js/widgets/controller';
import * as __beyond_dep_ns_4 from '@beyond-js/reactive/model';
// components/header/main.layout.header.tsx
declare namespace ns_0 {
  import React = __beyond_dep_def_0;
  export const Header: () => React.JSX.Element;
}


// components/header/notification/empty.tsx
declare namespace ns_1 {
  import React = __beyond_dep_def_0;
  export const NotificationEmpty: () => React.JSX.Element;
}


// components/header/notification/index.notification.header.tsx
declare namespace ns_2 {
  import React = __beyond_dep_def_0;
  export const Notification: () => React.JSX.Element;
}


// components/header/notification/item.tsx
declare namespace ns_3 {
  import React = __beyond_dep_def_0;
  import NotificationHistory = __beyond_dep_ns_1.NotificationHistory;
  interface IProps {
    item: NotificationHistory;
  }
  export const Notification: ({
    item
  }: IProps) => React.JSX.Element;
  export {};
}


// components/header/notification/list.tsx
declare namespace ns_4 {
  import React = __beyond_dep_def_0;
  import NotificationHistory = __beyond_dep_ns_1.NotificationHistory;
  interface IProps {
    items: NotificationHistory[];
  }
  export const NotificationList: ({
    items
  }: IProps) => React.JSX.Element;
  export {};
}


// components/header/notification/notification-toggler.tsx
declare namespace ns_5 {
  import React = __beyond_dep_def_0;
  interface IProps {
    hasBeenRead: boolean;
    setHasBeenRead: React.Dispatch<React.SetStateAction<boolean>>;
  }
  export const NotificationToggler: ({
    hasBeenRead,
    setHasBeenRead
  }: IProps) => React.JSX.Element;
  export {};
}


// components/header/profile/image.tsx
declare namespace ns_6 {
  import React = __beyond_dep_def_0;
  interface IProps {
    src: string;
    name: string;
  }
  export const ProfileImage: ({
    name,
    src
  }: IProps) => React.JSX.Element;
  export {};
}


// components/header/profile/index.profile.tsx
declare namespace ns_7 {
  import React = __beyond_dep_def_0;
  export const Profile: () => React.JSX.Element;
}


// components/header/profile/placeholder.tsx
declare namespace ns_8 {
  import React = __beyond_dep_def_0;
  export const Placeholder: () => React.JSX.Element;
}


// components/notification.tsx
declare namespace ns_9 {
  import React = __beyond_dep_def_0;
  export const Notification: ({
    title,
    body
  }: {
    title: string;
    body: string;
  }) => React.JSX.Element;
}


// components/sidebar/footer.tsx
declare namespace ns_10 {
  import React = __beyond_dep_def_0;
  export const SidebarFooter: () => React.JSX.Element;
}


// components/sidebar/header.tsx
declare namespace ns_11 {
  import React = __beyond_dep_def_0;
  interface IProps {
    theme: string;
  }
  export const SidebarHeader: ({
    theme
  }: IProps) => React.JSX.Element;
  export {};
}


// components/sidebar/item.tsx
declare namespace ns_12 {
  import React = __beyond_dep_def_0;
  import IModule = __beyond_dep_ns_1.IModule;
  interface IProps extends Partial<IModule> {
    to?: string;
    onClick: () => void;
    icon: string;
    label: string;
  }
  export const SidebarItem: React.FC<IProps>;
  export {};
}


// components/sidebar/loading.tsx
declare namespace ns_13 {
  import React = __beyond_dep_def_0;
  export const SidebarLoading: () => React.JSX.Element;
}


// components/sidebar/main.layout.sidebar.tsx
declare namespace ns_14 {
  import React = __beyond_dep_def_0;
  export const Sidebar: () => React.JSX.Element;
}


// context.ts
declare namespace ns_15 {
  import React = __beyond_dep_def_0;
  import StoreManager = ns_24.StoreManager;
  export interface IContext {
    store: StoreManager;
  }
  export const LayoutContext: React.Context<IContext>;
  export const useLayoutContext: () => IContext;
}


// controller.ts
declare namespace ns_16 {
  import ReactWidgetController = __beyond_dep_ns_2.ReactWidgetController;
  import Layout = ns_17.Layout;
  import IWidgetStore = __beyond_dep_ns_3.IWidgetStore;
  export class Controller extends ReactWidgetController {
    #private;
    get Widget(): typeof Layout;
    createStore(): IWidgetStore;
    show(): void;
    hide(): void;
  }
}


// main.layout.index.tsx
declare namespace ns_17 {
  import React = __beyond_dep_ns_0;
  import StoreManager = ns_24.StoreManager;
  global {
    namespace JSX {
      interface IntrinsicElements {
        'beyond-layout-children': any;
      }
    }
  }
  export function Layout({
    store
  }: {
    store: StoreManager;
  }): React.JSX.Element | null;
}


// managers/settings.ts
declare namespace ns_18 {
  import ReactiveModel = __beyond_dep_ns_4.ReactiveModel;
  import Widget = __beyond_dep_ns_1.Widget;
  import IWidget = __beyond_dep_ns_1.IWidget;
  import StoreManager = ns_24.StoreManager;
  export class SettingsManager extends ReactiveModel<SettingsManager> {
    #private;
    allWidgets: IWidget[];
    get selectedWidgets(): Widget[];
    set selectedWidgets(value: Widget[]);
    constructor(parent: StoreManager);
    load: () => Promise<unknown>;
    save: () => Promise<{
      status: boolean;
      error?: undefined;
    } | {
      status: boolean;
      error: unknown;
    }>;
  }
}


// settings/content.tsx
declare namespace ns_19 {
  import React = __beyond_dep_def_0;
  export const Content: () => React.JSX.Element;
}


// settings/index.tsx
declare namespace ns_20 {
  import React = __beyond_dep_ns_0;
  export function SettingsModal(): React.JSX.Element | null;
}


// settings/widgets/empty.tsx
declare namespace ns_21 {
  import React = __beyond_dep_def_0;
  export const Empty: () => React.JSX.Element;
}


// settings/widgets/index.widget.settings.tsx
declare namespace ns_22 {
  import React = __beyond_dep_def_0;
  export const WidgetSettings: () => React.JSX.Element;
}


// settings/widgets/widget-list.tsx
declare namespace ns_23 {
  import React = __beyond_dep_def_0;
  export const WidgetList: () => React.JSX.Element;
}


// store.ts
declare namespace ns_24 {
  import ReactiveModel = __beyond_dep_ns_4.ReactiveModel;
  import Modules = __beyond_dep_ns_1.Modules;
  import SettingsManager = ns_18.SettingsManager;
  export class StoreManager extends ReactiveModel<StoreManager> {
    #private;
    get settingsManager(): SettingsManager;
    get isSettingsOpen(): boolean;
    set isSettingsOpen(value: boolean);
    get mode(): "dark" | "light";
    get sidebarCollection(): Modules;
    get collapsedKey(): string;
    get isSidebarCollapsed(): boolean;
    set isSidebarCollapsed(value: boolean);
    constructor();
    loadSidebarItems: () => Promise<{
      status: boolean;
      error: unknown;
    } | undefined>;
    loadNotificationList: () => Promise<void>;
    changeMode: () => void;
    hide: () => void;
  }
  export const layoutStore: StoreManager;
}


// types.ts
declare namespace ns_25 {
  export interface ITexts {
    lightMode: string;
    darkMode: string;
    logout: string;
  }
}


export import useLayoutContext = ns_15.useLayoutContext;
export import Controller = ns_16.Controller;
export import layoutStore = ns_24.layoutStore;

export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };