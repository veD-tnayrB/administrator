"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hmr = exports.__beyond_pkg = exports.Badge = void 0;
var dependency_0 = require("@beyond-js/kernel/bundle");
var dependency_1 = require("@beyond-js/kernel/styles");
var dependency_2 = require("react");
const {
  Bundle: __Bundle
} = dependency_0;
const __pkg = new __Bundle({
  "module": {
    "vspecifier": "pragmate-ui@0.0.6/badge"
  },
  "type": "code"
}).package();
;
__pkg.dependencies.update([['@beyond-js/kernel/styles', dependency_1], ['react', dependency_2]]);
brequire('@beyond-js/kernel/styles').styles.register('pragmate-ui@0.0.6/badge');
const ims = new Map();

/***********************
INTERNAL MODULE: ./index
***********************/

ims.set('./index', {
  hash: 2882574013,
  creator: function (require, exports) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Badge = Badge;
    var _react = require("react");
    /*bundle*/
    function Badge({
      children,
      value,
      visible = false,
      variant = 'default',
      dot
    }) {
      const classes = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'default'];
      let cls = `pui-badge${classes.includes(variant) ? ` pui-badge--${variant}` : ''}`;
      if (visible) cls += ' pui-badge--visible';
      if (value) cls += ' pui-badge--has-value';
      if (dot) cls += ' dot';
      return _react.default.createElement("div", {
        className: 'pui-badge__container'
      }, _react.default.createElement("div", {
        className: 'content-children'
      }, children), _react.default.createElement("span", {
        className: cls
      }, value));
    }
  }
});
__pkg.exports.descriptor = [{
  "im": "./index",
  "from": "Badge",
  "name": "Badge"
}];
let Badge = exports.Badge = void 0;

// Module exports
__pkg.exports.process = function ({
  require,
  prop,
  value
}) {
  (require || prop === 'Badge') && (exports.Badge = Badge = require ? require('./index').Badge : value);
};
const __beyond_pkg = exports.__beyond_pkg = __pkg;
const hmr = exports.hmr = new function () {
  this.on = (event, listener) => void 0;
  this.off = (event, listener) => void 0;
}();
__pkg.initialise(ims);
//# sourceMappingURL=badge.cjs.js.map