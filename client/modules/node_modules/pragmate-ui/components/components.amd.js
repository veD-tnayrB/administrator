define(["exports", "module", "@beyond-js/kernel/bundle", "@beyond-js/kernel/styles", "react", "pragmate-ui/icons", "pragmate-ui/spinner", "pragmate-ui/ripple", "tippy.js", "@beyond-js/kernel/routing"], function (_exports, _amd_module, dependency_0, dependency_1, dependency_2, dependency_3, dependency_4, dependency_5, dependency_6, dependency_7) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.hmr = _exports.__beyond_pkg = _exports.Spinner = _exports.Link = _exports.ButtonGroup = _exports.Button = void 0;
  const {
    Bundle: __Bundle
  } = dependency_0;
  const __pkg = new __Bundle({
    "module": {
      "vspecifier": "pragmate-ui@0.0.6/components"
    },
    "type": "code"
  }, _amd_module.uri).package();
  ;
  __pkg.dependencies.update([['@beyond-js/kernel/styles', dependency_1], ['react', dependency_2], ['pragmate-ui/icons', dependency_3], ['pragmate-ui/spinner', dependency_4], ['pragmate-ui/ripple', dependency_5], ['tippy.js', dependency_6], ['@beyond-js/kernel/routing', dependency_7]]);
  brequire('@beyond-js/kernel/styles').styles.register('pragmate-ui@0.0.6/components');
  const ims = new Map();

  /*******************************************
  INTERNAL MODULE: ./button-group/button-group
  *******************************************/

  ims.set('./button-group/button-group', {
    hash: 3592527677,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.ButtonGroup = ButtonGroup;
      var _react = require("react");
      var _context = require("./context");
      /*bundle*/
      function ButtonGroup({
        orientation = 'row',
        children,
        ...props
      }) {
        const [selected, setSelected] = _react.default.useState(props.selected);
        let cls = `pui-button-group`;
        cls += orientation ? ` pui-button-group ${orientation}` : '';
        let disabled = !!props.disabled;
        const childrenWithProps = _react.default.Children.map(children, (child, index) => {
          if (_react.default.isValidElement(child)) {
            return _react.default.cloneElement(child, {
              index,
              disabled
            }); // Passing the index as a prop
          }
        });

        return _react.default.createElement(_context.ButtonGroupContext.Provider, {
          value: {
            selected,
            setSelected
          }
        }, _react.default.createElement("div", {
          className: cls
        }, childrenWithProps));
      }
    }
  });

  /**************************************
  INTERNAL MODULE: ./button-group/context
  **************************************/

  ims.set('./button-group/context', {
    hash: 2338960457,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.useButtonGroupContext = exports.ButtonGroupContext = void 0;
      var _react = require("react");
      const ButtonGroupContext = exports.ButtonGroupContext = _react.default.createContext({});
      const useButtonGroupContext = () => _react.default.useContext(ButtonGroupContext);
      exports.useButtonGroupContext = useButtonGroupContext;
    }
  });

  /***********************************
  INTERNAL MODULE: ./button-group/type
  ***********************************/

  ims.set('./button-group/type', {
    hash: 872288252,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
    }
  });

  /*******************************
  INTERNAL MODULE: ./button/button
  *******************************/

  ims.set('./button/button', {
    hash: 2984034171,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.Button = void 0;
      var _react = require("react");
      var _icons = require("pragmate-ui/icons");
      var _spinner = require("pragmate-ui/spinner");
      var _ripple = require("pragmate-ui/ripple");
      var _tippy = require("tippy.js");
      var _context = require("../button-group/context");
      const {
        forwardRef
      } = _react.default;
      /*bundle*/
      const Button = exports.Button = forwardRef((props, ref) => {
        const {
          className,
          onClick,
          data,
          label,
          title,
          children,
          icon,
          loading,
          block,
          index,
          fetching = false,
          variant = 'default',
          bordered = false,
          sizing = 'md',
          disabled = false,
          ...otherProps
        } = props;
        const context = _react.default.useContext(_context.ButtonGroupContext);
        const [processing, setProcessing] = _react.default.useState(fetching || loading);
        const refObject = _react.default.useRef(null);
        const combinedRef = instance => {
          refObject.current = instance;
          if (typeof ref === 'function') ref(instance);
          //@ts-ignore
          else if (ref) ref.current = instance;
        };
        const usingContext = typeof context?.setSelected === 'function';
        const onClickButton = async event => {
          if (usingContext) {
            context.setSelected(index);
          }
          if (onClick && typeof onClick === 'function') {
            setProcessing(true);
            //@ts-ignore
            await onClick(event);
            setProcessing(false);
            return;
          }
        };
        _react.default.useEffect(() => {
          const ripple = new _ripple.RippleEffect();
          ripple.addRippleEffect(refObject.current);
          if (title) {
            (0, _tippy.default)(refObject.current);
          }
        }, [title]);
        const properties = {
          ...otherProps,
          type: props.type ? props.type : 'button'
        };
        if (title) properties['data-tippy-content'] = title;
        if (data) {
          Object.keys(data).forEach(entry => {
            properties[`data-${entry}`] = data[entry];
          });
        }
        let cls = `pui-button btn-${variant}`;
        cls += className ? ` ${className}` : '';
        cls += bordered ? ' outline' : '';
        cls += icon ? ' has-icon' : '';
        cls += block ? ' btn--block' : '';
        cls += sizing ? ` btn--${sizing}` : '';
        cls += loading || fetching || processing ? ' btn--loading' : '';
        const clsLoading = `button-label ${loading || processing ? 'button-label--loading' : ''}`;
        if (usingContext && context.selected === index) cls += ' pui-btn--active';
        if (usingContext) properties['data-index'] = index;
        return _react.default.createElement("button", {
          ref: combinedRef,
          className: cls,
          onClick: onClickButton,
          disabled: loading || disabled || processing,
          ...properties
        }, icon && _react.default.createElement(_icons.Icon, {
          icon: icon
        }), label || children && _react.default.createElement("div", {
          className: clsLoading
        }, label || children), (loading || fetching || processing) && _react.default.createElement(_spinner.Spinner, {
          type: `on-${variant}`,
          active: true
        }));
      });
    }
  });

  /**********************************
  INTERNAL MODULE: ./button/interface
  **********************************/

  ims.set('./button/interface', {
    hash: 2774588843,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
    }
  });

  /**********************
  INTERNAL MODULE: ./link
  **********************/

  ims.set('./link', {
    hash: 1920375694,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.Link = Link;
      var _react = require("react");
      var _routing = require("@beyond-js/kernel/routing");
      /*bundle*/
      function Link({
        href,
        ...props
      }) {
        const isExternal = props.target === '_blank';
        const onClick = async event => {
          if (isExternal) return;
          event.preventDefault();
          event.stopPropagation();
          if (props.onClick && typeof props.onClick === 'function') {
            await props.onClick(event);
          }
          if (href) _routing.routing.pushState(href);
        };
        const properties = {
          ...props
        };
        ['href', 'onClick'].forEach(prop => delete properties[prop]);
        return _react.default.createElement("a", {
          ...properties,
          href: href,
          onClick: onClick,
          target: props.target
        }, props.children);
      }
    }
  });

  /*************************
  INTERNAL MODULE: ./spinner
  *************************/

  ims.set('./spinner', {
    hash: 4243581074,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.Spinner = void 0;
      var _react = require("react");
      const Component = (props, ref) => {
        let {
          color,
          className,
          size,
          type,
          active
        } = props;
        size = size ? size : 'xs';
        const types = ['on-primary', 'on-secondary', 'on-surface', 'on-error', 'primary', 'secondary', 'tertiary'];
        const clsType = types.includes(type) ? type : 'primary';
        const style = {};
        if (color) style.stroke = color;
        className = `${clsType}${className ? ` ${className}` : ''}`;
        let cls = `${className ? `${className} ` : ''}pragmate-element-spinner spinner--${size}`;
        if (active) cls += ' is-active';
        return _react.default.createElement("div", {
          className: cls,
          ref: ref
        }, _react.default.createElement("svg", {
          viewBox: '0 0 100 100'
        }, _react.default.createElement("circle", {
          cx: '50',
          cy: '50',
          r: '30',
          style: style
        })));
      };
      /*bundle*/
      const Spinner = exports.Spinner = (0, _react.forwardRef)(Component);
    }
  });
  __pkg.exports.descriptor = [{
    "im": "./button-group/button-group",
    "from": "ButtonGroup",
    "name": "ButtonGroup"
  }, {
    "im": "./button/button",
    "from": "Button",
    "name": "Button"
  }, {
    "im": "./link",
    "from": "Link",
    "name": "Link"
  }, {
    "im": "./spinner",
    "from": "Spinner",
    "name": "Spinner"
  }];
  let ButtonGroup = _exports.ButtonGroup = void 0,
    Button = _exports.Button = void 0,
    Link = _exports.Link = void 0,
    Spinner = _exports.Spinner = void 0;

  // Module exports
  __pkg.exports.process = function ({
    require,
    prop,
    value
  }) {
    (require || prop === 'ButtonGroup') && (_exports.ButtonGroup = ButtonGroup = require ? require('./button-group/button-group').ButtonGroup : value);
    (require || prop === 'Button') && (_exports.Button = Button = require ? require('./button/button').Button : value);
    (require || prop === 'Link') && (_exports.Link = Link = require ? require('./link').Link : value);
    (require || prop === 'Spinner') && (_exports.Spinner = Spinner = require ? require('./spinner').Spinner : value);
  };
  const __beyond_pkg = _exports.__beyond_pkg = __pkg;
  const hmr = _exports.hmr = new function () {
    this.on = (event, listener) => void 0;
    this.off = (event, listener) => void 0;
  }();
  __pkg.initialise(ims);
});
//# sourceMappingURL=components.amd.js.map