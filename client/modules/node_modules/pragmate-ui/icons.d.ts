/************
Processor: ts
************/

import * as __beyond_dep_ns_0 from 'react';
import __beyond_dep_def_0 from 'react';
// icon.tsx
declare namespace ns_0 {
  import SVGAttributes = __beyond_dep_ns_0.SVGAttributes;
  import Ref = __beyond_dep_ns_0.Ref;
  interface IProps extends SVGAttributes<SVGSVGElement> {
    title?: string;
    icon?: any;
    ref?: Ref<SVGSVGElement>;
    className?: string;
  }
  export const Icon: (props: IProps) => JSX.Element;
  export {};
}


// icons\index.ts
declare namespace ns_1 {
  export const PRAGMATE_ICONS: any;
}


// icons\list.ts
declare namespace ns_2 {
  export const GENERAL_ICONS: any;
}


// icons\media.ts
declare namespace ns_3 {
  export const MEDIA_ICONS: {
    pause: string;
    pauseCircleFilled: string;
    pauseCircleOutline: string;
    playCircle: string;
    play: string;
  };
}


// pragmate-icon-button.tsx
declare namespace ns_4 {
  import React = __beyond_dep_def_0;
  import ButtonHTMLAttributes = __beyond_dep_ns_0.ButtonHTMLAttributes;
  import SVGAttributes = __beyond_dep_ns_0.SVGAttributes;
  import RefAttributes = __beyond_dep_ns_0.RefAttributes;
  import PropsWithChildren = __beyond_dep_ns_0.PropsWithChildren;
  interface props extends ButtonHTMLAttributes<HTMLButtonElement> {
    icon?: string;
    viewBox?: SVGAttributes<SVGSVGElement>['viewBox'];
    id?: string;
    title?: string;
    tippy?: string | object;
    navigate?: string;
    variant?: string;
    'data-tippy-content'?: string;
  }
  export const IconButton: React.FC<PropsWithChildren<props> & RefAttributes<HTMLButtonElement>>;
  export {};
}


export import Icon = ns_0.Icon;
export import PRAGMATE_ICONS = ns_1.PRAGMATE_ICONS;
export import IconButton = ns_4.IconButton;

export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };