// Definición de un mapa de espaciados para los gaps
$spacing: (
	0: 0,
	1: 0.25rem,
	2: 0.5rem,
	3: 0.75rem,
	4: 1rem,
);
$flex-directions: (
	row: row,
	row-reverse: row-reverse,
	col: column,
	col-reverse: column-reverse,
);
$flex-wraps: (
	nowrap: nowrap,
	wrap: wrap,
	wrap-reverse: wrap-reverse,
);
$flex-justify: (
	start: flex-start,
	end: flex-end,
	center: center,
	between: space-between,
	around: space-around,
	evenly: space-evenly,
);
$flex-align: (
	start: flex-start,
	end: flex-end,
	center: center,
	stretch: stretch,
	baseline: baseline,
);

// Mixin para flex item
@mixin flex-item($grow: 0, $shrink: 1, $basis: auto) {
	flex-grow: $grow;
	flex-shrink: $shrink;
	flex-basis: $basis;
}

// Extensión del mixin para incluir gap
@mixin flex-container($direction: row, $wrap: nowrap, $justify: flex-start, $align: stretch, $gap: null) {
	display: flex;
	flex-direction: map-get($flex-directions, $direction);
	flex-wrap: map-get($flex-wraps, $wrap);
	justify-content: map-get($flex-justify, $justify);
	align-items: map-get($flex-align, $align);
	@if $gap != null {
		gap: map-get($spacing, $gap);
	}
}

// Uso de mixins para crear clases
.flex {
	@include flex-container;
}

.flex-row {
	@include flex-container(row);
}

.flex-row-reverse {
	@include flex-container(row-reverse);
}

.flex-col {
	@include flex-container(col);
}

.flex-col-reverse {
	@include flex-container(col-reverse);
}

.flex-wrap {
	@include flex-container(row, wrap);
}

.flex-wrap-reverse {
	@include flex-container(row, wrap-reverse);
}

.flex-nowrap {
	@include flex-container(row, nowrap);
}

.flex-grow {
	@include flex-item(1);
}

.flex-shrink {
	@include flex-item(0);
}

.flex-1 {
	@include flex-item(1, 1, 0%);
}

@each $key, $value in $spacing {
	.gap-#{$key} {
		gap: $value;
	}
}

@each $key, $value in $flex-justify {
	.justify-#{$key} {
		justify-content: $value;
	}
}

@each $key, $value in $flex-align {
	.items-#{$key} {
		align-items: $value;
	}
}
