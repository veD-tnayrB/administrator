/************
Processor: ts
************/

import * as __beyond_dep_ns_0 from '@essential-js/admin-server/db';
import * as __beyond_dep_ns_1 from '@essential-js/admin-server/types';
import * as __beyond_dep_ns_2 from '@essential-js/admin-server/helpers';
// cases/lists.ts
declare namespace ns_0 {
  import DB = __beyond_dep_ns_0.DB;
  export interface IListParams {
    where: {
      ids?: string[];
      [key: string]: unknown;
    };
    [key: string]: any;
  }
  export class List {
    static model: typeof DB.models.Modules;
    static execute: (params: IListParams) => Promise<{
      status: boolean;
      data: {
        entries: any;
        total: any;
        next: number;
      };
      error?: undefined;
      target?: undefined;
    } | {
      status: boolean;
      error: any;
      target: string;
      data?: undefined;
    }>;
  }
}


// cases/publish.ts
declare namespace ns_1 {
  import DB = __beyond_dep_ns_0.DB;
  import IModule = __beyond_dep_ns_1.IModule;
  export interface IPublish extends Omit<IModule, 'actions'> {
    id: string;
    label: string;
    description: string;
    icon: string;
    to: string;
    actions: Record<string, string>[];
  }
  export class Publish {
    static model: typeof DB.models.Modules;
    static modulesActions: typeof DB.models.ModulesActions;
    static handleRelations: (moduleId: string, actions: Record<string, string>[], transaction: any) => Promise<void>;
    static create: (params: Partial<IPublish>, target: string) => Promise<{
      status: boolean;
      data: {
        id: string;
      };
      error?: undefined;
    } | {
      status: boolean;
      error: {
        error: any;
        target: string;
      };
      data?: undefined;
    }>;
    static update: (params: IPublish, target: string) => Promise<{
      status: boolean;
      data: {
        id: string;
      };
      error?: undefined;
    } | {
      status: boolean;
      error: {
        error: any;
        target: string;
      };
      data?: undefined;
    }>;
  }
}


// index.ts
declare namespace ns_2 {
  import Manager = __beyond_dep_ns_2.Manager;
  import IPublish = ns_1.IPublish;
  import IListParams = ns_0.IListParams;
  export class ModulesManager extends Manager<IPublish> {
    constructor();
    list: (params: IListParams) => Promise<{
      status: boolean;
      data: {
        entries: any;
        total: any;
        next: number;
      };
      error?: undefined;
      target?: undefined;
    } | {
      status: boolean;
      error: any;
      target: string;
      data?: undefined;
    }>;
    create: (params: Partial<IPublish>) => Promise<{
      status: boolean;
      data: {
        id: string;
      };
      error?: undefined;
    } | {
      status: boolean;
      error: {
        error: any;
        target: string;
      };
      data?: undefined;
    }>;
    update: (params: IPublish) => Promise<{
      status: boolean;
      data: {
        id: string;
      };
      error?: undefined;
    } | {
      status: boolean;
      error: {
        error: any;
        target: string;
      };
      data?: undefined;
    }>;
  }
  export const Modules: ModulesManager;
}


export import Modules = ns_2.Modules;

export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };