/************
Processor: ts
************/

import __beyond_dep_def_0 from 'react';
// index.dialog.tsx
declare namespace ns_0 {
  import React = __beyond_dep_def_0;
  import IToggler = ns_2.IToggler;
  interface IProps {
    toggler: IToggler;
    isClose?: boolean;
    isOpen?: boolean | null;
    setIsOpen?: React.Dispatch<React.SetStateAction<boolean | null>>;
    children?: React.ReactNode;
  }
  export const Dialog: ({
    children,
    isClose,
    ...props
  }: IProps) => React.JSX.Element;
  export {};
}


// modal.tsx
declare namespace ns_1 {
  import React = __beyond_dep_def_0;
  export const Modal: ({
    children
  }: {
    children: React.ReactNode;
  }) => React.JSX.Element;
}


// toggler.tsx
declare namespace ns_2 {
  import React = __beyond_dep_def_0;
  export interface IToggler {
    label?: string;
    title?: string;
  }
  interface IProps extends IToggler {
    setIsOpen: React.Dispatch<React.SetStateAction<boolean | null>>;
  }
  export const Toggler: ({
    setIsOpen,
    label,
    title,
    ...validProps
  }: IProps) => React.JSX.Element;
  export {};
}


export import Dialog = ns_0.Dialog;

export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };