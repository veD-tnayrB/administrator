/************
Processor: ts
************/

import __beyond_dep_def_0 from 'react';
// accordion.tsx
declare namespace ns_0 {
  import React = __beyond_dep_def_0;
  interface IAccordionContext {
    onChange?: (event: any) => void;
    opened?: number;
    setOpened?: (opened: number) => void;
  }
  export const AccordionContext: React.Context<IAccordionContext>;
  export const useAccordionContext: () => IAccordionContext;
  export function Header({
    disabled,
    children,
    index
  }: {
    disabled: any;
    children: any;
    index: any;
  }): JSX.Element;
  export function Item({
    disabled,
    children,
    title,
    index
  }: {
    disabled: any;
    children: any;
    title: any;
    index: any;
  }): JSX.Element;
  export function Container({
    children,
    active
  }: {
    children: any;
    active?: number;
  }): JSX.Element;
  export const Accordion: {
    Header: typeof Header;
    Item: typeof Item;
    Container: typeof Container;
  };
  export {};
}


// content.tsx
declare namespace ns_1 {
  import React = __beyond_dep_def_0;
  interface ICollapsibleProps {
    children: React.ReactNode;
    className?: string;
  }
  export function CollapsibleContent({
    className,
    children
  }: ICollapsibleProps): JSX.Element;
  export {};
}


// context.tsx
declare namespace ns_2 {
  import React = __beyond_dep_def_0;
  export interface ICollapsibleContext {
    open: boolean;
    setOpen: (open: boolean) => void;
    onChange: (open: boolean) => void;
  }
  export const CollapsibleContext: React.Context<any>;
  export const useCollapsibleContext: () => any;
}


// header.tsx
declare namespace ns_3 {
  import React = __beyond_dep_def_0;
  interface ICollapsibleProps {
    children: React.ReactNode;
    className?: string;
    toggleTitle?: boolean;
  }
  export function CollapsibleHeader({
    children,
    className,
    toggleTitle
  }: ICollapsibleProps): JSX.Element;
  export {};
}


// index.tsx
declare namespace ns_4 {
  import React = __beyond_dep_def_0;
  interface IContainerProps {
    children: React.ReactNode;
    className?: string;
    open?: boolean;
    onToggle?: (open: boolean) => void;
  }
  export function CollapsibleContainer({
    children,
    onToggle,
    open,
    className
  }: IContainerProps): JSX.Element;
  export {};
}


export import Header = ns_0.Header;
export import Item = ns_0.Item;
export import Container = ns_0.Container;
export import Accordion = ns_0.Accordion;
export import CollapsibleContent = ns_1.CollapsibleContent;
export import CollapsibleHeader = ns_3.CollapsibleHeader;
export import CollapsibleContainer = ns_4.CollapsibleContainer;

export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };