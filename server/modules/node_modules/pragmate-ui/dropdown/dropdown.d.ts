/************
Processor: ts
************/

import * as __beyond_dep_ns_0 from 'react';
import __beyond_dep_def_0 from 'react';
// context.tsx
declare namespace ns_0 {
  import React = __beyond_dep_def_0;
  import PropsWithChildren = __beyond_dep_ns_0.PropsWithChildren;
  export const useDropdownContext: () => any;
  type props = {
    isToggle?: boolean;
    onToggle: any;
    isClose: boolean;
  };
  export function DropdownProvider(props: PropsWithChildren<props>): React.ReactElement;
  export {};
}


// link.tsx
declare namespace ns_1 {
  import React = __beyond_dep_def_0;
  interface props {
    className?: string;
    onClick?: Function;
    tag?: string;
    id?: string;
  }
  export function DropdownLink(props: React.PropsWithChildren<props>): JSX.Element;
  export {};
}


// menu.tsx
declare namespace ns_2 {
  import React = __beyond_dep_def_0;
  type props = {
    className: string;
  };
  export function DropDownMenu({
    children,
    className
  }: React.PropsWithChildren<props>): JSX.Element;
  export {};
}


// toggle.tsx
declare namespace ns_3 {
  import React = __beyond_dep_ns_0;
  type props = {
    className?: string;
  };
  export function DropdownToggle({
    children,
    className
  }: React.PropsWithChildren<props>): JSX.Element;
  export {};
}


export import DropdownProvider = ns_0.DropdownProvider;
export import DropdownLink = ns_1.DropdownLink;
export import DropDownMenu = ns_2.DropDownMenu;
export import DropdownToggle = ns_3.DropdownToggle;

export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };