"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hmr = exports.__beyond_pkg = exports.ReactSelect = void 0;
var dependency_0 = require("@beyond-js/kernel/bundle");
var dependency_1 = require("@beyond-js/kernel/styles");
var dependency_2 = require("react");
var dependency_3 = require("react-select");
const {
  Bundle: __Bundle
} = dependency_0;
const __pkg = new __Bundle({
  "module": {
    "vspecifier": "pragmate-ui@0.0.6/form/react-select"
  },
  "type": "code"
}).package();
;
__pkg.dependencies.update([['@beyond-js/kernel/styles', dependency_1], ['react', dependency_2], ['react-select', dependency_3]]);
brequire('@beyond-js/kernel/styles').styles.register('pragmate-ui@0.0.6/form/react-select');
const ims = new Map();

/***********************
INTERNAL MODULE: ./index
***********************/

ims.set('./index', {
  hash: 685704062,
  creator: function (require, exports) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ReactSelect = ReactSelect;
    var _react = require("react");
    var _reactSelect = require("react-select");
    var _observer = require("./observer");
    /*bundle*/
    function ReactSelect(props) {
      const properties = {
        ...props
      };
      const ref = _react.default.useRef(null);
      _react.default.useEffect(() => {
        const host = ref.current.getRootNode()?.host;
        if (!host) {
          console.warn('is not inside a web component');
        }
        const headStyles = document.head.querySelectorAll('style[data-emotion]');
        const insert = nodes => {
          nodes.forEach(node => {
            if (node instanceof HTMLStyleElement) {
              // Handle the new style element
              const clonedStyle = node.cloneNode(true);
              host.shadowRoot.appendChild(clonedStyle);
            }
          });
        };
        const styleObserver = new _observer.StyleObserver({
          callback: insert
        });
        const targetNode = document.head;
        styleObserver.startObserving(targetNode);
        insert(headStyles);
        return () => styleObserver.stopObserving();
      }, []);
      return _react.default.createElement("div", {
        className: 'pui-select',
        ref: ref
      }, _react.default.createElement(_reactSelect.default, {
        classNamePrefix: 'pui-react-select',
        ...properties
      }));
    }
  }
});

/**************************
INTERNAL MODULE: ./observer
**************************/

ims.set('./observer', {
  hash: 3933443758,
  creator: function (require, exports) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.StyleObserver = void 0;
    class StyleObserver {
      observer;
      constructor({
        callback
      }) {
        this.observer = new MutationObserver(mutations => {
          mutations.forEach(mutation => {
            if (mutation.type !== 'childList') return;
            callback(mutation.addedNodes);
          });
        });
      }
      startObserving(targetNode) {
        if (!targetNode) return;
        const config = {
          childList: true
        };
        this.observer.observe(targetNode, config);
      }
      stopObserving() {
        this.observer.disconnect();
      }
    }
    exports.StyleObserver = StyleObserver;
  }
});
__pkg.exports.descriptor = [{
  "im": "./index",
  "from": "ReactSelect",
  "name": "ReactSelect"
}];
let ReactSelect = exports.ReactSelect = void 0;

// Module exports
__pkg.exports.process = function ({
  require,
  prop,
  value
}) {
  (require || prop === 'ReactSelect') && (exports.ReactSelect = ReactSelect = require ? require('./index').ReactSelect : value);
};
const __beyond_pkg = exports.__beyond_pkg = __pkg;
const hmr = exports.hmr = new function () {
  this.on = (event, listener) => void 0;
  this.off = (event, listener) => void 0;
}();
__pkg.initialise(ims);
//# sourceMappingURL=form/react-select.cjs.js.map