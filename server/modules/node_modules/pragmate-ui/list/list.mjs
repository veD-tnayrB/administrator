import * as dependency_0 from '@beyond-js/kernel/bundle';
import * as dependency_1 from '@beyond-js/kernel/styles';
import * as dependency_2 from 'react';

const {Bundle: __Bundle} = dependency_0;
const __pkg = new __Bundle({"module":{"vspecifier":"pragmate-ui@0.0.6/list"},"type":"code"}, import.meta.url).package();;

__pkg.dependencies.update([['@beyond-js/kernel/styles', dependency_1],['react', dependency_2]]);

brequire('@beyond-js/kernel/styles').styles.register('pragmate-ui@0.0.6/list')


const ims = new Map();

/***********************
INTERNAL MODULE: ./index
***********************/

ims.set('./index', {hash: 388105230, creator: function (require, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.List = List;
var _react = require("react");
/*bundle */function List({
  items,
  className,
  children,
  index = 'id',
  specs,
  childrenPosition = 'top',
  control,
  container = 'ul'
}) {
  const Container = container;
  const Control = control;
  // const output: ReactNode[] = items.map((data, idx) => {
  // 	return <Control key={(data as any)[index as string] || idx} data={data} />;
  // });
  try {
    const output = items.map((item, idx) => {
      return _react.default.createElement(Control, {
        key: item[index] || idx,
        index: idx,
        data: item,
        item,
        specs
      });
    });
    return _react.default.createElement(Container, {
      className: className
    }, childrenPosition === 'top' && children ? children : null, output, childrenPosition === 'bottom' && children ? children : null);
  } catch (e) {
    console.error(`invalid items in list0`, items);
  }
}
}});

__pkg.exports.descriptor = [{"im":"./index","from":"List","name":"List"}];

export let List;

// Module exports
__pkg.exports.process = function({require, prop, value}) {
    (require || prop === 'List') && (List = require ? require('./index').List : value);

};
export const __beyond_pkg = __pkg;

export const hmr = new (function () {
    this.on = (event, listener) => void 0;
    this.off = (event, listener) => void 0;
});


__pkg.initialise(ims);
//# sourceMappingURL=list.mjs.map