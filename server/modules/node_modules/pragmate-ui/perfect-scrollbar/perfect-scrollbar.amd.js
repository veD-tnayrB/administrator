define(["exports", "module", "@beyond-js/kernel/bundle", "@beyond-js/kernel/styles", "react", "perfect-scrollbar"], function (_exports, _amd_module, dependency_0, dependency_1, dependency_2, dependency_3) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.hmr = _exports.__beyond_pkg = _exports.ScrollContainer = void 0;
  const {
    Bundle: __Bundle
  } = dependency_0;
  const __pkg = new __Bundle({
    "module": {
      "vspecifier": "pragmate-ui@0.0.6/perfect-scrollbar"
    },
    "type": "code",
    "name": "perfect-scrollbar"
  }, _amd_module.uri).package();
  ;
  __pkg.dependencies.update([['@beyond-js/kernel/styles', dependency_1], ['react', dependency_2], ['perfect-scrollbar', dependency_3]]);
  brequire('@beyond-js/kernel/styles').styles.register('pragmate-ui@0.0.6/perfect-scrollbar');
  const ims = new Map();

  /***************************
  INTERNAL MODULE: ./container
  ***************************/

  ims.set('./container', {
    hash: 1893022313,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.ScrollContainer = ScrollContainer;
      var _react = require("react");
      var _perfectScrollbar = require("perfect-scrollbar");
      /*bundle*/ /**
                  * It's a React component that uses the PerfectScrollbar library to create a scrollbar that can be
                  * customized with CSS.
                  * @param {props} props - props
                  * @returns A function that returns a JSX.Element
                  */
      function ScrollContainer(props) {
        const ref = (0, _react.useRef)(null);
        (0, _react.useEffect)(() => {
          const control = ref.current;
          const scrollbar = new _perfectScrollbar.default(control, {
            wheelSpeed: 2,
            wheelPropagation: true,
            minScrollbarLength: 20
          });
          const handleOnScrollY = event => {
            props.onScrollY(event, control, scrollbar);
          };
          const handleOnScrollX = event => {
            props.onScrollY(event, control, scrollbar);
          };
          const {
            onScrollY,
            onScrollX
          } = props;
          if (onScrollY) control.addEventListener("ps-scroll-y", handleOnScrollY);
          if (onScrollX) control.addEventListener("ps-scroll-y", handleOnScrollX);
          return () => {
            scrollbar.destroy();
            if (onScrollY) ref.current.removeEventListener("ps-scroll-y", onScrollY);
            if (onScrollX) ref.current.removeEventListener("ps-scroll-y", handleOnScrollX);
          };
        }, []);
        let cls = props.className ? `beyond-perfect-scrollbar ${props.className}` : "beyond-perfect-scrollbar";
        return _react.default.createElement("div", {
          ref: ref,
          className: cls
        }, props.children);
      }
    }
  });
  __pkg.exports.descriptor = [{
    "im": "./container",
    "from": "ScrollContainer",
    "name": "ScrollContainer"
  }];
  let ScrollContainer = _exports.ScrollContainer = void 0;

  // Module exports
  __pkg.exports.process = function ({
    require,
    prop,
    value
  }) {
    (require || prop === 'ScrollContainer') && (_exports.ScrollContainer = ScrollContainer = require ? require('./container').ScrollContainer : value);
  };
  const __beyond_pkg = _exports.__beyond_pkg = __pkg;
  const hmr = _exports.hmr = new function () {
    this.on = (event, listener) => void 0;
    this.off = (event, listener) => void 0;
  }();
  __pkg.initialise(ims);
});
//# sourceMappingURL=perfect-scrollbar.amd.js.map