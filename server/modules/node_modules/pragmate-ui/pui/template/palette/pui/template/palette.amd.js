define(["exports", "module", "@beyond-js/widgets/render", "@beyond-js/kernel/bundle", "@beyond-js/kernel/styles", "@beyond-js/react-18-widgets/base", "pragmate-ui/template/manager", "react", "pragmate-ui/components", "pragmate-ui/theme-switcher", "pragmate-ui/tooltip", "@beyond-js/react-18-widgets/hooks"], function (_exports, _amd_module, dependency_0, dependency_1, dependency_2, dependency_3, dependency_4, dependency_5, dependency_6, dependency_7, dependency_8, dependency_9) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.hmr = _exports.__beyond_pkg = _exports.View = _exports.Controller = void 0;
  const {
    Bundle: __Bundle
  } = dependency_1;
  const __pkg = new __Bundle({
    "module": {
      "vspecifier": "pragmate-ui@0.0.6/pui/template/palette"
    },
    "type": "widget"
  }, _amd_module.uri).package();
  ;
  __pkg.dependencies.update([['@beyond-js/widgets/render', dependency_0], ['@beyond-js/kernel/styles', dependency_2], ['@beyond-js/react-18-widgets/base', dependency_3], ['pragmate-ui/template/manager', dependency_4], ['react', dependency_5], ['pragmate-ui/components', dependency_6], ['pragmate-ui/theme-switcher', dependency_7], ['pragmate-ui/tooltip', dependency_8], ['@beyond-js/react-18-widgets/hooks', dependency_9]]);
  brequire('@beyond-js/widgets/render').widgets.register([{
    "name": "pui-template-view-widget",
    "vspecifier": "pragmate-ui@0.0.6/pui/template/palette"
  }]);
  brequire('@beyond-js/kernel/styles').styles.register('pragmate-ui@0.0.6/pui/template/palette');
  const ims = new Map();

  /****************************
  INTERNAL MODULE: ./controller
  ****************************/

  ims.set('./controller', {
    hash: 2377775720,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.Controller = void 0;
      var _base = require("@beyond-js/react-18-widgets/base");
      var _store = require("./store");
      var _views = require("./views");
      /*bundle*/
      class Controller extends _base.ReactWidgetController {
        #store;
        //@ts-ignore
        createStore() {
          this.#store = new _store.StoreManager();
          return this.#store;
        }
        get Widget() {
          return _views.View;
        }
        /**
         * this method is executed when the widget is showd
         */
        load() {}
        /**
         * this method is executed when the widget is hidden
         */
        hide() {}
      }
      exports.Controller = Controller;
    }
  });

  /**********************************
  INTERNAL MODULE: ./store/calculator
  **********************************/

  ims.set('./store/calculator', {
    hash: 1781491306,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.generatePalette = void 0;
      const hexToRgb = hex => {
        const bigint = parseInt(hex.replace('#', ''), 16);
        const r = bigint >> 16 & 255;
        const g = bigint >> 8 & 255;
        const b = bigint & 255;
        return [r, g, b];
      };
      const calcPercentageToBlack = rgb => {
        return Math.round(Math.min(...rgb) / 255 * 100);
      };
      const getPalettePosition = percentageToBlack => {
        const step = Math.ceil(100 / 14);
        return Math.ceil((100 - percentageToBlack) / step);
      };
      const rgbToHex = rgb => {
        const [r, g, b] = rgb;
        return '#' + [r, g, b].map(x => {
          const hex = x.toString(16);
          return hex.length === 1 ? '0' + hex : hex;
        }).join('');
      };
      const generatePalette = color => {
        let rgb = typeof color === 'string' ? hexToRgb(color) : color;
        const percentageToBlack = calcPercentageToBlack(rgb);
        const position = getPalettePosition(percentageToBlack);
        const palette = Array.from({
          length: 13
        }, (_, i) => {
          if (i === 0) return rgbToHex([0, 0, 0]);
          if (i === 12) return rgbToHex([255, 255, 255]);
          const factor = i / 12;
          const calc = (x, pos) => {
            let rounded = Math.round(x * factor);
            return rounded > 255 ? 255 : rounded;
          };
          const r = calc(rgb[0], 0);
          const g = calc(rgb[1], 1);
          const b = calc(rgb[2], 2);
          const newTone = [r, g, b];
          const MaxTone = Math.max(...newTone);
          if (i > 3) {
            const multiplier = i < 7 ? i < 5 ? 1.5 : 2 : 2.4;
            newTone[0] = Math.round(newTone[0] * multiplier) > 255 ? 255 : Math.round(newTone[0] * multiplier);
            newTone[1] = Math.round(newTone[1] * multiplier) > 255 ? 255 : Math.round(newTone[1] * multiplier);
            newTone[2] = Math.round(newTone[2] * multiplier) > 255 ? 255 : Math.round(newTone[2] * multiplier);
          }
          return rgbToHex(newTone);
        });
        if (position < 12) {
          //palette[position] = rgbToHex(rgb);
        }
        return palette;
      };
      exports.generatePalette = generatePalette;
      const rgbToHsl = ([r, g, b]) => {
        r /= 255;
        g /= 255;
        b /= 255;
        const max = Math.max(r, g, b);
        const min = Math.min(r, g, b);
        let h,
          s,
          l = (max + min) / 2;
        if (max === min) {
          h = s = 0;
        } else {
          const d = max - min;
          s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
          switch (max) {
            case r:
              h = (g - b) / d + (g < b ? 6 : 0);
              break;
            case g:
              h = (b - r) / d + 2;
              break;
            case b:
              h = (r - g) / d + 4;
              break;
          }
          h /= 6;
        }
        return [h * 360, s * 100, l * 100];
      };
      const hslToHex = (h, s, l) => {
        l /= 100;
        const a = s * Math.min(l, 1 - l) / 100;
        const f = n => {
          const k = (n + h / 30) % 12;
          const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);
          return Math.round(255 * color).toString(16).padStart(2, '0');
        };
        return `#${f(0)}${f(8)}${f(4)}`;
      };
      const generateHSLPalette = hsl => {
        const [h, s, l] = hsl;
        const step = 100 / 12;
        const palette = [];
        for (let i = 0; i <= 12; i++) {
          let newL = l + (step * i - l);
          newL = Math.min(100, Math.max(0, newL));
          palette.push(hslToHex(h, s, newL));
        }
        return palette;
      };
      const initialColor = [255, 165, 0];
      const initialHSL = rgbToHsl(initialColor);
      const palette = generateHSLPalette(initialHSL);
    }
  });

  /*****************************
  INTERNAL MODULE: ./store/index
  *****************************/

  ims.set('./store/index', {
    hash: 2196189842,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.StoreManager = void 0;
      var _manager = require("pragmate-ui/template/manager");
      var _calculator = require("./calculator");
      globalThis.TplManager = _manager.TplManager;
      class StoreManager {
        #values;
        get values() {
          return this.#values;
        }
        #properties = ['primary', 'secondary', 'tertiary', 'error', 'success', 'warning', 'error'];
        get properties() {
          return this.#properties;
        }
        #tones = ['neutral'];
        get tones() {
          return this.#tones;
        }
        #colors = new Map();
        get colors() {
          return this.#colors;
        }
        get items() {
          return [...this.colors.entries()];
        }
        constructor() {
          this.properties.forEach((property, index) => {
            this.#colors.set(property, (0, _calculator.generatePalette)(_manager.TplManager.root[property]));
          });
        }
      }
      exports.StoreManager = StoreManager;
    }
  });

  /*************************************
  INTERNAL MODULE: ./views/SurfacesPanel
  *************************************/

  ims.set('./views/SurfacesPanel', {
    hash: 1638992548,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.SurfacesPanel = SurfacesPanel;
      var _react = require("react");
      var _manager = require("pragmate-ui/template/manager");
      console.log(0.1, _manager.TplManager);
      function SurfacesPanel() {
        // const surfaces = Object.keys(TplManager.root).filter(name => name.includes('surface'));
        const lightSurfaces = Array.from(_manager.TplManager.light.style).filter(ele => ele.startsWith('--surface'));
        const darkSurfaces = Array.from(_manager.TplManager.dark.style).filter(ele => ele.startsWith('--surface'));
        return _react.default.createElement("div", null, _react.default.createElement("h3", null, "Light Surfaces"), _react.default.createElement("section", {
          className: 'surface__container surface__container--light'
        }, lightSurfaces.map((surface, i) => {
          return _react.default.createElement("div", {
            key: `surface.${surface}.${i}`,
            className: 'surface__item',
            style: {
              backgroundColor: _manager.TplManager.light.style.getPropertyValue(surface)
            }
          }, surface);
        })), _react.default.createElement("h3", null, "Dark Surfaces"), _react.default.createElement("section", {
          className: 'surface__container surface__container--dark'
        }, darkSurfaces.map((surface, i) => {
          return _react.default.createElement("div", {
            key: `surface.${surface}.${i}`,
            className: 'surface__item',
            style: {
              backgroundColor: _manager.TplManager.dark.style.getPropertyValue(surface)
            }
          }, surface);
        })), _react.default.createElement("hr", null));
      }
    }
  });

  /*****************************
  INTERNAL MODULE: ./views/index
  *****************************/

  ims.set('./views/index', {
    hash: 1147283378,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.View = View;
      var _react = require("react");
      var _palettes = require("./palettes");
      var _SurfacesPanel = require("./SurfacesPanel");
      var _components = require("pragmate-ui/components");
      var _themeSwitcher = require("pragmate-ui/theme-switcher");
      /*bundle*/
      function View({
        store
      }) {
        const [view, setView] = _react.default.useState('palettes');
        const Views = {
          palettes: _palettes.Palettes,
          surfaces: _SurfacesPanel.SurfacesPanel
        };
        const onClick = event => {
          event.preventDefault();
          setView(event.currentTarget.dataset.view);
        };
        const Control = Views[view];
        return _react.default.createElement("main", {
          className: 'component__container'
        }, _react.default.createElement("h2", null, "Template tones"), _react.default.createElement("div", {
          className: 'contents'
        }, _react.default.createElement(_components.ButtonGroup, {
          selected: 0
        }, _react.default.createElement(_components.Button, {
          onClick: onClick,
          variant: 'primary',
          "data-view": 'palettes'
        }, "Palettes"), _react.default.createElement(_components.Button, {
          onClick: onClick,
          variant: 'primary',
          "data-view": 'surfaces'
        }, "Surfaces")), _react.default.createElement(_themeSwitcher.ThemeSwitcher, null)), _react.default.createElement(Control, {
          store: store
        }));
      }
    }
  });

  /***************************************
  INTERNAL MODULE: ./views/neutral-pallete
  ***************************************/

  ims.set('./views/neutral-pallete', {
    hash: 3951672452,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.NeutralPalette = void 0;
      var _react = require("react");
      var _manager = require("pragmate-ui/template/manager");
      var _tooltip = require("pragmate-ui/tooltip");
      globalThis.tplManager = _manager.TplManager;
      const NeutralPalette = ({
        property,
        store
      }) => {
        const elements = Object.keys(_manager.TplManager.root).filter(i => i.startsWith(property));
        return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement("h4", null, property), _react.default.createElement("div", {
          className: `palette-container--neutral palette-${property}`
        }, elements.map((value, index) => {
          const color = _manager.TplManager.root[value];
          if (value === '') return null;
          return _react.default.createElement("div", {
            key: `${property}.${value}.${index}`
          }, _react.default.createElement("h5", null, value), _react.default.createElement(_tooltip.Tooltip, {
            key: `${property}.${value}.${index}`,
            content: color
          }, _react.default.createElement("div", {
            className: `palette__color-container color-${value}`,
            "data-color": color,
            "data-name": value,
            style: {
              backgroundColor: color
            }
          })));
        })));
      };
      exports.NeutralPalette = NeutralPalette;
    }
  });

  /*******************************
  INTERNAL MODULE: ./views/palette
  *******************************/

  ims.set('./views/palette', {
    hash: 1269297561,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.Palette = void 0;
      var _react = require("react");
      var _manager = require("pragmate-ui/template/manager");
      var _tooltip = require("pragmate-ui/tooltip");
      globalThis.tplManager = _manager.TplManager;
      const Palette = ({
        property,
        store
      }) => {
        const values = ['', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '95', '98', '100'];
        return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement("h4", null, property), _react.default.createElement("div", {
          className: `palette-container palette-${property}`
        }, values.map((value, index) => {
          const color = _manager.TplManager.root[`${property}${value}`];
          if (value === '') return null;
          return _react.default.createElement(_tooltip.Tooltip, {
            key: `${property}.${value}.${index}`,
            content: color
          }, _react.default.createElement("div", {
            className: `palette__color-container color-${value}`,
            "data-color": color,
            "data-name": `${property}${value}`,
            style: {
              backgroundColor: color
            }
          }, value));
        })));
      };
      exports.Palette = Palette;
    }
  });

  /********************************
  INTERNAL MODULE: ./views/palettes
  ********************************/

  ims.set('./views/palettes', {
    hash: 401120785,
    creator: function (require, exports) {
      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.Palettes = void 0;
      var _react = require("react");
      var _manager = require("pragmate-ui/template/manager");
      var _palette = require("./palette");
      var _neutralPallete = require("./neutral-pallete");
      var _hooks = require("@beyond-js/react-18-widgets/hooks");
      globalThis.tplManager = _manager.TplManager;
      const Palettes = ({
        store
      }) => {
        (0, _hooks.useBinder)([_manager.TplManager], () => {
          const surfaces = Object.keys(_manager.TplManager.root).filter(name => name.includes('surface'));
          console.log('TplManager updated', _manager.TplManager.root.surface);
        });
        const output = store.properties.map((tone, i) => {
          return _react.default.createElement(_palette.Palette, {
            key: `${tone}.${i}`,
            property: tone,
            store: store
          });
        });
        const output2 = store.tones.map((tone, i) => {
          return _react.default.createElement(_neutralPallete.NeutralPalette, {
            key: `${tone}.${i}`,
            property: tone,
            store: store
          });
        });
        return _react.default.createElement(_react.default.Fragment, null, output, " ", output2);
      };
      exports.Palettes = Palettes;
    }
  });
  __pkg.exports.descriptor = [{
    "im": "./controller",
    "from": "Controller",
    "name": "Controller"
  }, {
    "im": "./views/index",
    "from": "View",
    "name": "View"
  }];
  let Controller = _exports.Controller = void 0,
    View = _exports.View = void 0;

  // Module exports
  __pkg.exports.process = function ({
    require,
    prop,
    value
  }) {
    (require || prop === 'Controller') && (_exports.Controller = Controller = require ? require('./controller').Controller : value);
    (require || prop === 'View') && (_exports.View = View = require ? require('./views/index').View : value);
  };
  const __beyond_pkg = _exports.__beyond_pkg = __pkg;
  const hmr = _exports.hmr = new function () {
    this.on = (event, listener) => void 0;
    this.off = (event, listener) => void 0;
  }();
  __pkg.initialise(ims);
});
//# sourceMappingURL=pui/template/palette.amd.js.map