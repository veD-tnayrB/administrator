/************
Processor: ts
************/

import * as __beyond_dep_ns_0 from '@beyond-js/react-18-widgets/base';
import __beyond_dep_def_1 from 'react';
// controller.ts
declare namespace ns_0 {
  import ReactWidgetController = __beyond_dep_ns_0.ReactWidgetController;
  import StoreManager = ns_2.StoreManager;
  import View = ns_4.View;
  export class Controller extends ReactWidgetController {
    #private;
    createStore(): StoreManager;
    get Widget(): typeof View;
    /**
     * this method is executed when the widget is showd
     */
    load(): void;
    /**
     * this method is executed when the widget is hidden
     */
    hide(): void;
  }
}


// store\calculator.ts
declare namespace ns_1 {
  type ColorInput = string | [number, number, number];
  export const generatePalette: (color: ColorInput) => any[];
  export {};
}


// store\index.ts
declare namespace ns_2 {
  type TColorInput = string | [number, number, number];
  type TRGB = [number, number, number];
  export class StoreManager {
    #private;
    get values(): TColorInput | TRGB[];
    get properties(): string[];
    get tones(): string[];
    get colors(): Map<any, any>;
    get items(): [any, any][];
    constructor();
  }
  export {};
}


// views\SurfacesPanel.tsx
declare namespace ns_3 {
  /// <reference types="react" />
  export function SurfacesPanel(): JSX.Element;
}


// views\index.tsx
declare namespace ns_4 {
  /// <reference types="react" />
  export function View({
    store
  }: {
    store: any;
  }): JSX.Element;
}


// views\neutral-pallete.tsx
declare namespace ns_5 {
  import React = __beyond_dep_def_1;
  import StoreManager = ns_2.StoreManager;
  interface PaletteComponentProps {
    property: string;
    store: StoreManager;
  }
  export const NeutralPalette: React.FC<PaletteComponentProps>;
  export {};
}


// views\palette.tsx
declare namespace ns_6 {
  import React = __beyond_dep_def_1;
  import StoreManager = ns_2.StoreManager;
  interface PaletteComponentProps {
    property: string;
    store: StoreManager;
  }
  export const Palette: React.FC<PaletteComponentProps>;
  export {};
}


// views\palettes.tsx
declare namespace ns_7 {
  import React = __beyond_dep_def_1;
  import StoreManager = ns_2.StoreManager;
  interface PaletteComponentProps {
    property: string;
    store: StoreManager;
  }
  export const Palettes: React.FC<PaletteComponentProps>;
  export {};
}


export import Controller = ns_0.Controller;
export import View = ns_4.View;

export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };