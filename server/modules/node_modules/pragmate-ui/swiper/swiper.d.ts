/************
Processor: ts
************/

import __beyond_dep_def_0 from 'react';
import * as __beyond_dep_ns_1 from '@beyond-js/reactive/model';
// components\footer.tsx
declare namespace ns_0 {
  /// <reference types="react" />
  export function SwiperFooter(props: any): JSX.Element;
}


// components\navigation.tsx
declare namespace ns_1 {
  /// <reference types="react" />
  export function SwiperNavigation(): JSX.Element;
}


// components\pagination.tsx
declare namespace ns_2 {
  /// <reference types="react" />
  export function Pagination(): JSX.Element;
}


// context.tsx
declare namespace ns_3 {
  import React = __beyond_dep_def_0;
  import Controller = ns_8.Controller;
  export interface ISwiperContext {
    footer: boolean;
    pagination?: boolean;
    navigation?: boolean;
    controller?: Controller;
    refs: {
      next: React.RefObject<HTMLButtonElement>;
      container: React.RefObject<HTMLDivElement>;
      pagination: React.RefObject<HTMLDivElement>;
      prev: React.RefObject<HTMLButtonElement>;
    };
  }
  export const SwiperContext: React.Context<ISwiperContext>;
  export const useSwiperContext: () => ISwiperContext;
}


// index.tsx
declare namespace ns_4 {
  /// <reference types="react" />
  import ISwiperOptions = ns_5.ISwiperOptions;
  export function SwiperSlider(props: ISwiperOptions): JSX.Element;
}


// interfaces\swiper-props.ts
declare namespace ns_5 {
  /// <reference types="react" />
  export interface ISwiperOptions {
    slideTo?: number;
    footer?: boolean;
    className?: string;
    next?: boolean;
    pagination?: boolean;
    navigation: boolean;
    children?: React.FC[];
  }
}


// slide\index.tsx
declare namespace ns_6 {
  /// <reference types="react" />
  export function SlideItems({
    items
  }: {
    items: any;
  }): JSX.Element;
}


// slide\slide.tsx
declare namespace ns_7 {
  /// <reference types="react" />
  export function Slide({
    children
  }: {
    children: any;
  }): JSX.Element;
}


// state\controller.ts
declare namespace ns_8 {
  import ReactiveModel = __beyond_dep_ns_1.ReactiveModel;
  export class Controller extends ReactiveModel<any> {
    #private;
    get swiper(): any;
    setSwiper: (element: any, props: any, ref: any) => void;
    nextSlide: () => void;
    prevSlide: () => void;
    next: () => void;
  }
}


// state\interface.ts
declare namespace ns_9 {
  /// <reference types="react" />
  export interface IProps {
    children: Array<JSX.Element>;
    footer?: boolean;
    navigation?: boolean;
    pagination?: boolean;
    next?: boolean;
    functionNext?: (e: React.SyntheticEvent) => void;
    className?: string;
    slideTo?: any;
    slidesPerView?: string | number;
    spaceBetween?: number;
  }
}


// use-swiper.tsx
declare namespace ns_10 {
  import React = __beyond_dep_def_0;
  import ISwiperOptions = ns_5.ISwiperOptions;
  export const useSwiperSlider: (props: ISwiperOptions) => {
    refs: {
      next: React.MutableRefObject<HTMLButtonElement>;
      container: React.MutableRefObject<undefined>;
      pagination: React.MutableRefObject<undefined>;
      prev: React.MutableRefObject<HTMLButtonElement>;
    };
    state: any;
    prev: React.MutableRefObject<HTMLButtonElement>;
    container: React.MutableRefObject<undefined>;
  };
}


export import SwiperSlider = ns_4.SwiperSlider;

export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };