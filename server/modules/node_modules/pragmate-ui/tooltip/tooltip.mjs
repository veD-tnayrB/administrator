import * as dependency_0 from '@beyond-js/kernel/bundle';
import * as dependency_1 from 'react';
import * as dependency_2 from 'tippy.js';

const {Bundle: __Bundle} = dependency_0;
const __pkg = new __Bundle({"module":{"vspecifier":"pragmate-ui@0.0.6/tooltip"},"type":"ts"}, import.meta.url).package();;

__pkg.dependencies.update([['react', dependency_1],['tippy.js', dependency_2]]);

const ims = new Map();

/********************************
INTERNAL MODULE: ./ITippySettings
********************************/

ims.set('./ITippySettings', {hash: 3730348027, creator: function (require, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
}});

/***********************
INTERNAL MODULE: ./index
***********************/

ims.set('./index', {hash: 780162422, creator: function (require, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Tooltip = Tooltip;
var _react = require("react");
var _tippy = require("tippy.js");
/*bundle*/function Tooltip({
  children,
  content,
  placement = 'top',
  settings = {}
}) {
  const ref = _react.default.useRef(null);
  const placements = ['top', 'top-start', 'top-end', 'right', 'right-start', 'right-end', 'bottom', 'bottom-start', 'bottom-end', 'left', 'left-start', 'left-end', 'auto', 'auto-start', 'auto-end'];
  if (!placements.includes(placement)) placement = 'top';
  const specs = {
    placement,
    content
  };
  _react.default.useEffect(() => {
    (0, _tippy.default)(ref.current, specs);
  }, []);
  return _react.default.createElement("span", {
    ref: ref,
    className: "pui-tooltip"
  }, children);
}
}});

__pkg.exports.descriptor = [{"im":"./index","from":"Tooltip","name":"Tooltip"}];

export let Tooltip;

// Module exports
__pkg.exports.process = function({require, prop, value}) {
    (require || prop === 'Tooltip') && (Tooltip = require ? require('./index').Tooltip : value);

};
export const __beyond_pkg = __pkg;

export const hmr = new (function () {
    this.on = (event, listener) => void 0;
    this.off = (event, listener) => void 0;
});


__pkg.initialise(ims);
//# sourceMappingURL=tooltip.mjs.map